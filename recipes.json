[
  {
    "id": "nodejs",
    "recipeId": "zeropsio/recipe-nodejs",
    "slug": "nodejs",
    "tag": "Node.js",
    "logo": "nodejs",
    "title": "Node.js",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-nodejs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nodejs\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nodejs"
      }
    ],
    "desc": "This is the most bare-bones example of Node.js app running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Node.js / Express.js app running on a load balanced <strong>Zerops Node.js</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Node.js service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Node.js production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/winstonjs/winston\">winston</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: nodejs@20\n      prepareCommands:\n        - npm install -g typescript\n      buildCommands:\n        - npm i --verbose\n        - npm run build\n      deployFiles:\n        - ./dist\n        - ./node_modules\n        - ./package.json\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      envVariables:\n        NODE_ENV: production\n        DB_NAME: db\n        DB_HOST: db\n        DB_USER: db\n        DB_PASS: ${db_password}\n      start: npm run start:prod\n      healthCheck:\n        httpGet:\n          port: 3000\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "bun",
    "recipeId": "zeropsio/recipe-bun",
    "slug": "bun",
    "tag": "Bun",
    "logo": "bun",
    "title": "Bun",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-bun\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: bun@1.1\n    buildFromGit: https://github.com/zeropsio/recipe-bun\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-bun"
      }
    ],
    "desc": "This is the most bare-bones example of Bun app running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Bun app running on a load balanced <strong>Zerops Bun</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Node.js service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Bun production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/winstonjs/winston\">winston</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: bun@1.1\n      buildCommands:\n        - bun install\n        - bun run build\n      deployFiles:\n        - package.json\n        - dist\n    run:\n      base: bun@1.1\n      envVariables:\n        NODE_ENV: production\n        DB_NAME: db\n        DB_HOST: db\n        DB_USER: db\n        DB_PASS: ${db_password}\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: bun run start:prod\n      healthCheck:\n        httpGet:\n          port: 3000\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-bun/refs/heads/main/zerops.yml"
  },
  {
    "id": "deno",
    "recipeId": "zeropsio/recipe-deno",
    "slug": "deno",
    "tag": "Deno",
    "logo": "deno",
    "title": "Deno",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-deno\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: deno@1\n    buildFromGit: https://github.com/zeropsio/recipe-deno\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-deno"
      }
    ],
    "desc": "This is the most bare-bones example of Deno app running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Deno app running on a load balanced <strong>Zerops Deno</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Node.js service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Deno production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/deno-library/logger\">Deno logger</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: deno@1\n      buildCommands:\n        - deno task build\n      deployFiles:\n        - dist\n        - deno.jsonc\n    run:\n      base: deno@1\n      envVariables:\n        DB_NAME: db\n        DB_HOST: db\n        DB_USER: db\n        DB_PASS: ${db_password}\n      ports:\n        - port: 8000\n          httpSupport: true\n      start: deno task start\n      healthCheck:\n        httpGet:\n          port: 8000\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-deno/refs/heads/main/zerops.yml"
  },
  {
    "id": "php",
    "recipeId": "zeropsio/recipe-php",
    "slug": "php",
    "tag": "PHP",
    "logo": "php",
    "title": "PHP",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-php\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: apacheapi\n    type: php-apache@8.3\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-php\n\n  - hostname: nginxapi\n    type: php-apache@8.3\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-php\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-php"
      }
    ],
    "desc": "This is the most bare-bones example of PHP running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>PHP 8.3</strong> app running on a load balanced <strong>Zerops Apache and Nginx</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the PHP service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>apacheapi/nginxapi</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available PHP production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/Seldaek/monolog\">Monolog</a>, <a target=\"_blank\" href=\"https://github.com/jbroadway/analog\">Analog</a> or <a target=\"_blank\" href=\"https://github.com/katzgrau/KLogger\">KLogger</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: apacheapi\n    build:\n      base:\n        - php@8.3\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n      deployFiles:\n        - ./index.php\n        - ./.htaccess\n        - ./vendor\n    run:\n      base: php-apache@8.3\n      envVariables:\n        DB_NAME: db\n        DB_HOST: db\n        DB_PORT: 5432\n        DB_USER: db\n        DB_PASS: ${db_password}\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /status\n\n  - setup: nginxapi\n    build:\n      base:\n        - php@8.3\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n      deployFiles:\n        - ./index.php\n        - ./vendor\n    run:\n      base: php-nginx@8.3\n      envVariables:\n        DB_NAME: db\n        DB_HOST: db\n        DB_PORT: 5432\n        DB_USER: db\n        DB_PASS: ${db_password}\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-php/refs/heads/main/zerops.yml"
  },
  {
    "id": "go",
    "recipeId": "zeropsio/recipe-go",
    "slug": "go",
    "tag": "Golang",
    "logo": "go",
    "title": "Go",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-go\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: go@1.22\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-go\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-go"
      }
    ],
    "desc": "This is the most bare-bones example of Go running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Golang v1.22.</strong> app running on a load balanced <strong>Zerops GO</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the GO service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available GO production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/sirupsen/logrus\">Logrus</a>, <a target=\"_blank\" href=\"https://github.com/uber-go/zap\">Zap</a> or <a target=\"_blank\" href=\"https://github.com/rs/zerolog\">ZeroLog</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: go@1\n      buildCommands:\n        - go build -o app .\n      deployFiles: ./app\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 8080\n          path: /status\n    run:\n      base: go@1\n      start: ./app\n      ports:\n        - port: 8080\n          httpSupport: true\n      envVariables:\n        DB_NAME: db\n        DB_HOST: ${db_hostname}\n        DB_PORT: ${db_port}\n        DB_USER: ${db_user}\n        DB_PASS: ${db_password}\n      healthCheck:\n        httpGet:\n          port: 8080\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-go/refs/heads/main/zerops.yml"
  },
  {
    "id": "java",
    "recipeId": "zeropsio/recipe-java",
    "slug": "java",
    "tag": "Java",
    "logo": "java",
    "title": "Java",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-java\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: java@17\n    buildFromGit: https://github.com/zeropsio/recipe-java\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-java"
      }
    ],
    "desc": "This is the most bare-bones example of Java running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n      <section>\n        <h2>Recipe features</h2>\n        <ul>\n          <li><strong>Java 17 Spring Boot</strong> app running on a load balanced <strong>Zerops Java</strong> service</li>\n          <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n          <li>Healthcheck setup example</li>\n          <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n          <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n        </ul>\n      </section>\n\n      <section>\n        <h2>Production vs. development</h2>\n        <p>Base of the recipe is ready for production, the difference comes down to:</p>\n        <ul>\n          <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n          <li>Use at least two containers for the GO service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n        </ul>\n        <p>Further things to think about when running more complex, highly available GO production apps on Zerops:</p>\n        <ul>\n          <li>Containers are volatile - use Zerops object storage to store your files</li>\n          <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n          <li>Implement more advanced logging, such as using <a target=\"_blank\" href=\"http://www.slf4j.org/\">SLF4J</a> with <a target=\"_blank\" href=\"http://logback.qos.ch/\">Logback</a></li>\n        </ul>\n      </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>Configure the application to <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-java/blob/main/src/main/resources/application.properties#L11\">listen on all network interfaces</a> (<em>server.address=0.0.0.0</em>) to ensure it's accessible within the Zerops environment</>\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: java@17\n      buildCommands:\n        - ./mvnw clean install\n      deployFiles:\n        - target/recipe-1.0.0.jar\n    run:\n      base: java@17\n      envVariables:\n        DB_NAME: db\n        DB_HOST: db\n        DB_USER: db\n        DB_PASS: ${db_password}\n      ports:\n        - port: 8080\n          httpSupport: true\n      start: java -jar target/recipe-1.0.0.jar\n      healthCheck:\n        httpGet:\n          port: 8080\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-java/refs/heads/main/zerops.yml"
  },
  {
    "id": "python",
    "recipeId": "zeropsio/recipe-python",
    "slug": "python",
    "tag": "Python",
    "logo": "python",
    "title": "Python",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-python\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: python@3.12\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-python\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-python"
      }
    ],
    "desc": "This is the most bare-bones example of Python running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Python 3.12</strong> app running on a load balanced <strong>Zerops Python</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Python service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Python production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/sirupsen/logrus\">Logrus</a>, <a target=\"_blank\" href=\"https://github.com/uber-go/zap\">Zap</a> or <a target=\"_blank\" href=\"https://github.com/rs/zerolog\">ZeroLog</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: python@3.12\n      deploy:\n        - app.py\n      addToRunPrepare:\n        - requirements.txt\n    run:\n      base: python@3.12\n      prepareCommands:\n        - python3 -m pip install --ignore-installed -r requirements.txt\n      start: python3 app.py\n      ports:\n        - port: 8000\n          httpSupport: true\n      envVariables:\n        DB_NAME: db\n        DB_HOST: ${db_hostname}\n        DB_PORT: ${db_port}\n        DB_USER: ${db_user}\n        DB_PASS: ${db_password}\n      healthCheck:\n        httpGet:\n          port: 8000\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-python/refs/heads/main/zerops.yml"
  },
  {
    "id": "dotnet",
    "recipeId": "zeropsio/recipe-dotnet",
    "slug": "dotnet",
    "tag": ".NET",
    "logo": "dotnet",
    "title": ".NET",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-dotnet\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: dotnet@6\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-dotnet\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-dotnet"
      }
    ],
    "desc": "This is the most bare-bones example of .NET running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>.NET 6</strong> app running on a load balanced <strong>Zerops .NET</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the .NET service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available .NET production apps on Zerops:</p>\n      <ul>\n+        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/NLog/NLog\">NLog</a> or <a target=\"_blank\" href=\"https://github.com/serilog/serilog\">serilog</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n#      os: ubuntu\n      base: dotnet@6\n      buildCommands:\n        - dotnet build -o app\n      deployFiles: app/~\n    run:\n#      os: ubuntu\n      base: dotnet@6\n      start: dotnet dotnet.dll\n      ports:\n        - port: 5000\n          httpSupport: true\n      envVariables:\n        DB_NAME: db\n        DB_HOST: ${db_hostname}\n        DB_PORT: ${db_port}\n        DB_USER: ${db_user}\n        DB_PASS: ${db_password}\n      healthCheck:\n        httpGet:\n          port: 5000\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-dotnet/refs/heads/main/zerops.yml"
  },
  {
    "id": "rust",
    "recipeId": "zeropsio/recipe-rust",
    "slug": "rust",
    "tag": "Rust",
    "logo": "rust",
    "title": "Rust",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-rust\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: rust@1\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-rust\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-rust"
      }
    ],
    "desc": "This is the most bare-bones example of Rust running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Rust 1.78</strong> app running on a load balanced <strong>Zerops Rust</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Rust service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Rust production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Use more advanced logging lib, such as <a target=\"_blank\" href=\"https://github.com/slog-rs/slog\">slog</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: rust@1.78\n      buildCommands:\n        - cargo build --release\n      deployFiles:\n        - ./target/release/~/rust\n    run:\n      base: rust@1.78\n      start: ./rust\n      ports:\n          - port: 8080\n            httpSupport: true\n      envVariables:\n        DB_NAME: db\n        DB_HOST: ${db_hostname}\n        DB_PORT: ${db_port}\n        DB_USER: ${db_user}\n        DB_PASS: ${db_password}\n      healthCheck:\n        httpGet:\n          port: 8080\n          path: /status\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-rust/refs/heads/main/zerops.yml"
  },
  {
    "id": "gleam",
    "recipeId": "zeropsio/recipe-gleam",
    "slug": "gleam",
    "tag": "Gleam",
    "logo": "gleam",
    "title": "Gleam",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-gleam\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: gleam@1.5\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-gleam\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-gleam"
      }
    ],
    "desc": "This is the most bare-bones example of Gleam running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Wisp + Mist</strong> app running on a load balanced <strong>Zerops Gleam</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup endpoint at <em>/status</em></li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Gleam service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Gleam production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (Valkey) for caching, storing sessions and pub/sub messaging</li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: gleam@1.5\n      buildCommands:\n        - gleam export erlang-shipment\n      deployFiles: build/erlang-shipment/~\n    run:\n      base: gleam@1.5\n      envVariables:\n        DATABASE_URL: ${db_connectionString}/${db_dbName}\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: ./entrypoint.sh run\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-gleam/refs/heads/main/zerops.yml"
  },
  {
    "id": "ruby",
    "recipeId": "zeropsio/recipe-ruby",
    "slug": "ruby",
    "tag": "Ruby",
    "logo": "ruby",
    "title": "Ruby",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-ruby\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: ruby@3.4\n    buildFromGit: https://github.com/zeropsio/recipe-ruby\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-ruby"
      }
    ],
    "desc": "This is the most bare-bones example of Ruby running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Ruby</strong> with <strong>Sinatra</strong> on a load balanced <strong>Zerops Ruby</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Healthcheck setup example via <em>/status</em> endpoint</li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system through dotenv</li>\n        <li>Utilization of Zerops' built-in <strong>log management</strong> with various log levels</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Ruby service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Ruby production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (KeyDB) for caching, storing sessions and pub/sub messaging</li>\n        <li>Consider using Puma or Unicorn as production-ready application servers</li>\n        <li>Use more advanced logging tools such as the Ruby port of structured logging libraries</li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      os: alpine\n      base: ruby@3.4\n      envVariables:\n        RACK_ENV: production\n        BUNDLE_DEPLOYMENT: 1\n        BUNDLE_WITHOUT: development\n      buildCommands:\n        - bundle install\n        #- bundle exec rails assets:precompile\n      deployFiles:\n        - .\n    run:\n      os: alpine\n      base: ruby@3.4\n      envVariables:\n        RACK_ENV: production\n        BUNDLE_DEPLOYMENT: 1\n        BUNDLE_WITHOUT: development\n        \n        DB_HOST: $db_hostname\n        DB_PORT: $db_port\n        DB_USER: $db_user\n        DB_PASS: $db_password\n        DB_NAME: $db_dbName\n      ports:\n        - port: 8080\n          httpSupport: true\n      start: bundle exec ruby app.rb\n      \n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-ruby/refs/heads/main/zerops.yml"
  },
  {
    "id": "elixir",
    "recipeId": "zeropsio/recipe-elixir",
    "slug": "elixir",
    "tag": "Elixir",
    "logo": "elixir",
    "title": "Elixir",
    "listed": true,
    "category": "runtimes",
    "importYaml": "project:\n  name: recipe-elixir\n  tags:\n    - zerops-recipe\n    \nservices:\n  - hostname: api\n    type: elixir@1.16\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-elixir\n    \n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-elixir"
      }
    ],
    "desc": "This is the most bare-bones example of Elixir running on Zerops — as few libraries as possible, just a simple endpoint with connnect, read and write to a Zerops PostgreSQL database.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Plug</strong> + <strong>Cowboy</strong> HTTP server running on a load balanced <strong>Zerops Elixir</strong> service</li>\n        <li>Zerops <strong>PostgreSQL</strong> service as database</li>\n        <li>Built with <code>plug_cowboy</code> for HTTP server functionality</li>\n        <li><strong>Ecto</strong> for database interactions</li>\n        <li>Health check endpoint at <code>/status</code></li>\n        <li>Utilization of Zerops' built-in <strong>environment variables</strong> system</li>\n        <li>JSON response handling with <strong>Jason</strong></li>\n    </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Elixir service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Elixir production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Use Zerops Redis (Valkey) for caching, storing sessions and pub/sub messaging</li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: elixir@1.16\n      envVariables:\n        MIX_ENV: prod\n        DATABASE_URL: ${db_connectionString}/${db_dbName}\n      buildCommands:\n        - mix deps.get --only prod\n        - mix ecto.create\n        - mix ecto.migrate\n        - mix compile\n        - mix release --overwrite\n      deployFiles: _build/prod/rel/app/~\n    run:\n      base: alpine@latest\n      envVariables:\n        DATABASE_URL: ${db_connectionString}/${db_dbName}\n        PORT: 4000\n        POOL_SIZE: 10\n      ports:\n        - port: 4000\n          httpSupport: true\n      start: bin/app start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-elixir/refs/heads/main/zerops.yml"
  },
  {
    "id": "react",
    "recipeId": "zeropsio/recipe-react",
    "slug": "react",
    "tag": "React",
    "logo": "react",
    "title": "React SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-react\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-react-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-react-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-react-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-react-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://react.dev/\">React</a> is a JavaScript web library for building fast, dynamic full-stack web apps with both server-side rendering and static site generation. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running React apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>React + Vite + Express</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n        <li>Latest version of <strong>React + Vite</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default SSG installation</h2>\n      <p>If you want to modify your existing React app to efficiently run on Zerops, no changes are needed in the codebase beyond the standard installation. Just add the <a href=\"https://github.com/zeropsio/recipe-react-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to your repository.</p>\n    </section>\n    <section>\n      <h2>Changes made over the default SSR installation</h2>\n      <p>If you want to modify your existing React app to efficiently run on Zerops, Follow the given Steps below:</p>\n      <ul>\n      <li>You'll need to setup a <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/server.js\" target=\"_blank\">server.js</a> file.</li>\n      <li>Make sure you have the used packages check the <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/package.json\" target=\"_blank\">package.json</a> to know the used packages.</li>\n      <li>Check the scripts used in <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/package.json\" target=\"_blank\">package.json</a>. Make sure you have the following scripts.</li>\n      </ul>\n      <p>Now, just add the <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project.</p>\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - public\n        - node_modules\n        - dist\n        - package.json\n        - server.js\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n      \n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-react-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "react-nodejs",
    "recipeId": "zeropsio/recipe-react-nodejs",
    "slug": "react-nodejs",
    "tag": "React",
    "logo": "react",
    "title": "React SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-react\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-react-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-react-nodejs"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://react.dev/\">React</a> is a JavaScript web library for building fast, dynamic full-stack web apps with both server-side rendering and static site generation. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running React apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>React + Vite + Express</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing React app to efficiently run on Zerops, Follow the given Steps below:</p>\n      <ul>\n      <li>You'll need to setup a <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/server.js\" target=\"_blank\">server.js</a> file.</li>\n      <li>Make sure you have the used packages check the <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/package.json\" target=\"_blank\">package.json</a> to know the used packages.</li>\n      <li>Check the scripts used in <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/package.json\" target=\"_blank\">package.json</a>. Make sure you have the following scripts.</li>\n      </ul>\n      <p>Now, just add the <a href=\"https://github.com/zeropsio/recipe-react-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - public\n        - node_modules\n        - dist\n        - package.json\n        - server.js\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n      \n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-react-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "react-static",
    "recipeId": "zeropsio/recipe-react-static",
    "slug": "react-static",
    "tag": "React",
    "logo": "react",
    "title": "React Static",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-react\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-react-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-react-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://react.dev/\">React</a> is a JavaScript web library for building fast, dynamic full-stack web apps with both server-side rendering and static site generation. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running React apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>React + Vite</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing React app to efficiently run on Zerops, no changes are needed in the codebase beyond the standard installation. Just add the <a href=\"https://github.com/zeropsio/recipe-react-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to your repository.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - dist/~\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-react-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "vue",
    "recipeId": "zeropsio/recipe-vue",
    "slug": "vue",
    "tag": "Vue",
    "logo": "vue",
    "title": "Vue.js",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-vue\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static@1.0\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-vue",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-vue"
      }
    ],
    "desc": "Vue.js is an approachable, performant and versatile framework for building web user interfaces.Zerops makes deploying and running Vue.js a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <p>A <strong>Vue 3</strong> running on a load balanced <strong>Zerops Node.js</strong> service.</p>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add minContainers: 2 in recipe YAML in the app service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Vue app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a target=\"_blank\" href=\"https://github.com/zeropsio/vue/blob/main/zerops.yml\">zerops.yml</a> to your repository.</>\n    </section>\n\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - dist/~\n      cache:\n        - node_modules\n        - pnpm-lock.yaml\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-vue/refs/heads/main/zerops.yml"
  },
  {
    "id": "svelte",
    "recipeId": "zeropsio/recipe-svelte",
    "slug": "svelte",
    "tag": "Svelte",
    "logo": "svelte",
    "title": "Svelte SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-svelte\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-svelte-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-svelte-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-svelte-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-svelte-static"
      }
    ],
    "desc": "<a href=\"https://kit.svelte.dev/\">Sveltekit</a> is a framework for building robust, fast web applications using Svelte. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Sveltekit apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>SvelteKit</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n        <li>Latest version of <strong>SvelteKit</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing SvelteKit app to efficiently run on Zerops, follow these steps:</p>\n      <ol>\n        <li>Install the necessary adapter with:\n          <pre>pnpm i -D @sveltejs/adapter-node</pre>\n        </li>\n        <li>Add the adapter to your <em>svelte.config.js</em> to enable SSG. Also, ensure you have <em>@sveltejs/vite-plugin-svelte</em> to avoid errors.\n<pre>import adapter from '@sveltejs/adapter-node';\nimport { vitePreprocess } from '@sveltejs/vite-plugin-svelte';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n  kit: {\n    adapter: adapter(),\n  },\n  preprocess: vitePreprocess(),\n};\n\nexport default config;</pre>\n        </li>\n        <li>\n        Only for static version - Add the prerender option to your root layout, for example, in src/routes/+layout.ts:\n<pre>// export const ssr = false; default is false\nexport const prerender = true;</pre>\n        </li>\n        <li>\n          Add the corresponding zerops.yml for <a href=\"https://github.com/zeropsio/recipe-svelte-nodejs/blob/main/zerops.yml\" target=\"_blank\">SSR</a>\n           or <a href=\"https://github.com/zeropsio/recipe-svelte-static/blob/main/zerops.yml\" target=\"_blank\">static</a> version.\n        </li>\n      </ol>\n\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - build\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-svelte-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "svelte-nodejs",
    "recipeId": "zeropsio/recipe-svelte-nodejs",
    "slug": "svelte-nodejs",
    "tag": "Svelte",
    "logo": "svelte",
    "title": "Svelte SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-svelte\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-svelte-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-svelte-nodejs"
      }
    ],
    "desc": "<a href=\"https://kit.svelte.dev/\">Sveltekit</a> is a framework for building robust, fast web applications using Svelte. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Sveltekit apps, both server side rendered and static, a breeze. This recipe showcases the SSR version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>SvelteKit</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing SvelteKit app to efficiently run on Zerops, follow these steps:</p>\n      <ol>\n        <li>Install the necessary adapter with:\n          <pre>pnpm i -D @sveltejs/adapter-node</pre>\n        </li>\n        <li>Add the adapter to your <em>svelte.config.js</em> to enable SSG. Also, ensure you have <em>@sveltejs/vite-plugin-svelte</em> to avoid errors.\n<pre>import adapter from '@sveltejs/adapter-node';\nimport { vitePreprocess } from '@sveltejs/vite-plugin-svelte';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n  kit: {\n    adapter: adapter(),\n  },\n  preprocess: vitePreprocess(),\n};\n\nexport default config;</pre>\n        </li>\n        <li>\n          Add the corresponding zerops.yml for <a href=\"https://github.com/zeropsio/recipe-svelte-nodejs/blob/main/zerops.yml\" target=\"_blank\">SSR</a>\n           or <a href=\"https://github.com/zeropsio/recipe-svelte-static/blob/main/zerops.yml\" target=\"_blank\">static</a> version.\n        </li>\n      </ol>\n\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - build\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-svelte-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "svelte-static",
    "recipeId": "zeropsio/recipe-svelte-static",
    "slug": "svelte-static",
    "tag": "Svelte",
    "logo": "svelte",
    "title": "Svelte static",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-svelte\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-svelte-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-svelte-static"
      }
    ],
    "desc": "<a href=\"https://kit.svelte.dev/\">Sveltekit</a> is a framework for building robust, fast web applications using Svelte. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Sveltekit apps, both server side rendered and static, a breeze. This recipe showcases the static version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>SvelteKit</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing SvelteKit app to efficiently run on Zerops, follow these steps:</p>\n      <ol>\n        <li>Install the necessary adapter with:\n          <pre>pnpm i -D @sveltejs/adapter-node</pre>\n        </li>\n        <li>Add the adapter to your <em>svelte.config.js</em> to enable SSG. Also, ensure you have <em>@sveltejs/vite-plugin-svelte</em> to avoid errors.\n<pre>import adapter from '@sveltejs/adapter-node';\nimport { vitePreprocess } from '@sveltejs/vite-plugin-svelte';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n  kit: {\n    adapter: adapter(),\n  },\n  preprocess: vitePreprocess(),\n};\n\nexport default config;</pre>\n        </li>\n        <li>\n        Add the prerender option to your root layout, for example, in src/routes/+layout.ts:\n<pre>// export const ssr = false; default is false\nexport const prerender = true;</pre>\n        </li>\n        <li>\n          Add the corresponding zerops.yml for <a href=\"https://github.com/zeropsio/recipe-svelte-nodejs/blob/main/zerops.yml\" target=\"_blank\">SSR</a>\n           or <a href=\"https://github.com/zeropsio/recipe-svelte-static/blob/main/zerops.yml\" target=\"_blank\">static</a> version.\n        </li>\n      </ol>\n\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - build/~\n    run:\n      base: static\n\n      \n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-svelte-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "nextjs",
    "recipeId": "zeropsio/recipe-nextjs",
    "slug": "nextjs",
    "tag": "Next.js",
    "logo": "nextjs",
    "title": "Next.js SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-nextjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nextjs-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nextjs-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-nextjs-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-nextjs-static"
      }
    ],
    "desc": "<a href=\"https://nextjs.org/\" target=\"_blank\">Next.js</a> is a React framework for fast, dynamic full-stack web apps with both server-side rendering and static site generation. <a href=\"https://zerops.io/\" target=\"_blank\">Zerops</a> makes deploying and running Next.js apps, both server side rendered and static, a breeze.</a>",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Next.js 14+</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n        <li>Latest version of <strong>Next.js 14+</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default SSR installation</h2>\n      <p>If you want to modify your existing Remix app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-nextjs-nodejs/blob/main/zerops.yml\">zerops.yml</a> to your repository.</p>\n    </section>\n    <section>\n      <h2>Changes made over the default SSG installation</h2>\n      <p>If you want to modify your existing Next.js app to efficiently run on Zerops, follow this step:</p>\n      <ol>\n        <li>Go to <em>next.config.mjs</em> and add <em>output: 'export'</em> to nextConfig.\n          <pre>/const nextConfig = { output: 'export', };</pre>\n        </li>\n        <li>Now, just add the <a href=\"https://github.com/zeropsio/recipe-nextjs-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n      </ol>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles: ./\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nextjs-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "nextjs-nodejs",
    "recipeId": "zeropsio/recipe-nextjs-nodejs",
    "slug": "nextjs-nodejs",
    "tag": "Next.js",
    "logo": "nextjs",
    "title": "Next.js SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-nextjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nextjs-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nextjs-nodejs"
      }
    ],
    "desc": "<a href=\"https://nextjs.org/\" target=\"_blank\">Next.js</a> is a React framework for fast, dynamic full-stack web apps with both server-side rendering and static site generation. <a href=\"https://zerops.io/\" target=\"_blank\">Zerops</a> makes deploying and running Next.js apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Next.js 14+</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Next.js app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-nextjs-nodejs/blob/main/zerops.yml\">zerops.yml</a> to your repository.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles: ./\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nextjs-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "nextjs-static",
    "recipeId": "zeropsio/recipe-nextjs-static",
    "slug": "nextjs-static",
    "tag": "Next.js",
    "logo": "nextjs",
    "title": "Next.js SSG",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-nextjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nextjs-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nextjs-static"
      }
    ],
    "desc": "<a href=\"https://nextjs.org/\" target=\"_blank\">Next.js</a> is a React framework for fast, dynamic full-stack web apps with both server-side rendering and static site generation. <a href=\"https://zerops.io/\" target=\"_blank\">Zerops</a> makes deploying and running Next.js apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Next.js 14+</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Next.js app to efficiently run on Zerops, follow this step:</p>\n      <ol>\n        <li>Go to <em>next.config.mjs</em> and add <em>output: 'export'</em> to nextConfig.\n          <pre>/const nextConfig = { output: 'export', };</pre>\n        </li>\n        <li>Now, just add the <a href=\"https://github.com/zeropsio/recipe-nextjs-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n      </ol>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - out/~\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nextjs-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "remix-nodejs",
    "recipeId": "zeropsio/recipe-remix-nodejs",
    "slug": "remix-nodejs",
    "tag": "Remix",
    "logo": "remix",
    "title": "Remix (Node.js)",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-remix\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-remix-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-remix-nodejs"
      }
    ],
    "desc": "Remix is a framework for fast, dynamic web apps with server-side rendering. Zerops simplifies deployment, offering automatic scaling, optional caching, logging integrations, and easy setup for additional services, letting you focus on development without infrastructure hassles.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <p>A Node.js version of <strong>Remix v2</strong> running on a load balanced <strong>Zerops Node.js</strong> service.</p>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add minContainers: 2 in recipe YAML in the app service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n\n      <p>Additionally, you might want to consider:</p>\n      <ul>\n        <li>Using <strong>Zerops Redis</strong> service for caching</li>\n        <li>Setting up <a target=\"_blank\" href=\"https://github.com/winstonjs/winston\">Winston</a> for advanced and structured logging</li>\n      </ul>\n\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Remix app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-remix-nodejs/blob/main/zerops.yml\">zerops.yml</a> to your repository.</>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - build\n        - server.js\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-remix-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "astro",
    "recipeId": "zeropsio/recipe-astro",
    "slug": "astro",
    "tag": "Astro",
    "logo": "astro",
    "title": "Astro SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-astro\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-astro-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-astro-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-astro-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-astro-static"
      }
    ],
    "desc": "Astro is a server-first JavaScript web framework that supports every major UI framework, it's optimized for building fast, content-driven websites. Zerops makes deploying and running Astro sites, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>SSR version of <strong>Astro 4.1</strong> running on a load balanced <strong>Zerops Node.js</strong> service.</li>\n        <li>Static version of <strong>Astro 4.1</strong> running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>staticapp</em> and <em>ssrapp</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <ul>\n        <li>For the SSR version, if you haven't already, add <em>@astrojs/node</em> package and implement it in your <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-astro-nodejs/blob/main/astro.config.mjs#L15-L17\">astro.config.mjs</a>. No changes needed for the static version.</li>\n        <li>Add <strong>zerops.yml</strong> to your repository, <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-astro-nodejs/blob/main/zerops.yml\">version for SSR</a>, <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-astro-static/blob/main/zerops.yml\">version for static</a>.</li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - dist\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      envVariables:\n        PORT: 3000\n        HOST: 0.0.0.0\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-astro-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "astro-nodejs",
    "recipeId": "zeropsio/recipe-astro-nodejs",
    "slug": "astro-nodejs",
    "tag": "Astro",
    "logo": "astro",
    "title": "Astro SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-astro\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-astro-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-astro-nodejs"
      }
    ],
    "desc": "Astro is a server-first JavaScript web framework that supports every major UI framework, it's optimized for building fast, content-driven websites. Zerops makes deploying and running Astro sites, both server side rendered and static, a breeze. This recipe showcases the SSR version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <p>SSR version of <strong>Astro 4.1</strong> running on a load balanced <strong>Zerops Node.js</strong> service.</p>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Astro site to efficiently run on Zerops, these are the general steps we took:</p>\n      <ul>\n        <li>If you haven't already, add <em>@astrojs/node</em> package and implement it in your <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-astro-nodejs/blob/main/astro.config.mjs#L15-L17\">astro.config.mjs</a>. No changes needed for the static version</li>\n        <li>Add <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-astro-nodejs/blob/main/zerops.yml\">zerops.yml</a> to your repository</li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - dist\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      envVariables:\n        PORT: 3000\n        HOST: 0.0.0.0\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-astro-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "astro-static",
    "recipeId": "zeropsio/recipe-astro-static",
    "slug": "astro-static",
    "tag": "Astro",
    "logo": "astro",
    "title": "Astro static",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-astro\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-astro-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-astro-static"
      }
    ],
    "desc": "Astro is a server-first JavaScript web framework that supports every major UI framework, it's optimized for building fast, content-driven websites. Zerops makes deploying and running Astro sites, both server side rendered and static, a breeze. This recipe showcases the static version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <p>SSR version of <strong>Astro 4.1</strong> running on <strong>Zerops Static</strong> service.</p>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Astro Static site to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-astro-static/blob/main/zerops.yml\">zerops.yml</a> to your repository.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - dist/~\n    run:\n      base: static\n\n      \n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-astro-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "solidjs",
    "recipeId": "zeropsio/recipe-solidjs",
    "slug": "solidjs",
    "tag": "Solid",
    "logo": "solid",
    "title": "Solid SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-solidjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-solidjs-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-solidjs-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-solidjs-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-solidjs-static"
      }
    ],
    "desc": "Solid is a declarative Javascript library for creating fast, dynamic web apps with server-side rendering. Zerops makes deploying and running Astro sites, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest SSR Solid version generated with <a target=\"_blank\" href=\"https://start.solidjs.com/\">SolidStart</a> running on a load balanced <strong>Zerops Node.js</strong> service</li>\n        <li>Latest Static Solid version generated with <a target=\"_blank\" href=\"https://start.solidjs.com/\">SolidStart</a> running on <strong>Zerops Static</strong> service</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>staticapp</em> and <em>ssrapp</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n\n      <p>Additionally for the SSR version you might want to consider setting up <a target=\"_blank\" href=\"https://github.com/winstonjs/winston\">Winston</a> for advanced and structured logging.</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Solid app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <strong>zerops.yml</strong> to your repository,\n       <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-solidjs-nodejs/blob/main/zerops.yml\">version for SSR</a>, <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-solidjs-static/blob/main/zerops.yml\">version for static</a>.</li>\n      </p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - .output\n        - public\n        - node_modules\n        - package.json\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-solidjs-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "solidjs-nodejs",
    "recipeId": "zeropsio/recipe-solidjs-nodejs",
    "slug": "solidjs-nodejs",
    "tag": "Solid",
    "logo": "solid",
    "title": "Solid SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-solidjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-solidjs-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-solidjs-nodejs"
      }
    ],
    "desc": "Solid is a declarative Javascript library for creating fast, dynamic web apps with server-side rendering. Zerops makes deploying and running Solid.js apps, both server side rendered and static, a breeze. This recipe showcases the SSR version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest Solid version generated with <a taget=\"_blank\" href=\"https://start.solidjs.com/\">SolidStart</a> running on a load balanced <strong>Zerops Node.js</strong> service</li>\n        <li>Server Side Rendering (SSR) with Vinxi</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n\n      <p>Additionally for you might want to consider setting up <a target=\"_blank\" href=\"https://github.com/winstonjs/winston\">Winston</a> for advanced and structured logging.</p>\n\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Solid app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-solidjs-nodejs/blob/main/zerops.yml\">zerops.yml</a> to your repository.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - .output\n        - public\n        - node_modules\n        - package.json\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-solidjs-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "solidjs-static",
    "recipeId": "zeropsio/recipe-solidjs-static",
    "slug": "solidjs-static",
    "tag": "Solid",
    "logo": "solid",
    "title": "Solid Static",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-solidjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-solidjs-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-solidjs-static"
      }
    ],
    "desc": "Solid is a declarative Javascript library for creating fast, dynamic web apps with server-side rendering. Zerops makes deploying and running Solid.js apps, both server side rendered and static, a breeze. This recipe showcases the static version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest Solid version generated with <a taget=\"_blank\" href=\"https://start.solidjs.com/\">SolidStart</a> running on <strong>Zerops Static</strong> service</li>\n        <li>Static Site Generation (SSG) with Vite.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Solid app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a target=\"_blank\" href=\"https://github.com/zeropsio/recipe-solidjs-static/blob/main/zerops.yml\">zerops.yml</a> to your repository.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - dist/~\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-solidjs-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "nestjs",
    "recipeId": "zeropsio/recipe-nestjs",
    "slug": "nestjs",
    "tag": "Nest.js",
    "logo": "nestjs",
    "title": "Nest.js",
    "listed": true,
    "category": "backend",
    "importYaml": "project:\n  name: recipe-nestjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: nodejs@20\n    buildFromGit: https://github.com/zeropsio/recipe-nestjs\n    enableSubdomainAccess: true\n    priority: 5\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: app\n    type: static\n    buildFromGit: https://github.com/zeropsio/recipe-backend-ui\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStoragePolicy: public-read\n    objectStorageSize: 2\n    priority: 10\n\n  - hostname: adminer\n    type: php-apache@8.1\n    buildFromGit: https://github.com/zeropsio/recipe-adminer\n    enableSubdomainAccess: true\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nestjs"
      }
    ],
    "desc": "<a href=\"https://nestjs.com\" target=\"_blank\">Nest.js</a> is an amazing and popular Node.js framework. This recipe aims to showcase, through a simple file upload demo application, advanced concepts that unlock the scalebility powers of Nest.js.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Load balanced Nest.js API running on <strong>Zerops Node.js</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Zerops <strong>Object Storage</strong> (S3 compatible) service as file system</li>\n        <li><strong>Idempotent</strong> TypeORM database migrations setup</li>\n        <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI</li>\n        <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n        <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong></li>\n        <li><a href=\"https://www.adminer.org\" target=\"_blank\">Adminer</a> for <strong>quick database management</strong> tool</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Nest.js service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n        <li>Use production-ready third-party SMTP server instead of Mailpit (change <em>SMTP_*</em> secret variables in recipe YAML, <em>api</em> service section)</li>\n        <li>Disable public access to Adminer or remove it altogether (remove service adminer from recipe YAML)</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your Nest.js existing app to efficiently run on Zerops, these are the general steps we took:</p>\n      <ul>\n        <li>Add <a href=\"https://github.com/zeropsio/recipe-nestjs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> to your repository, our example includes health checks and idempotent migrations</li>\n        <li>Utilize Zerops environment variables management to securely pass <a href=\"https://github.com/zeropsio/recipe-nestjs/blob/main/src/config/db.config.ts#L8-L12\" target=\"_blank\">environment variables</a> to your app</li>\n        <li>Add multer, aws-sdk packages and <a href=\"https://github.com/zeropsio/recipe-nestjs/blob/main/src/file/file.service.ts#L26-L36\" target=\"_blank\">utilize them</a> to upload files to S3 compatible Zerops object storage</li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: nodejs@20\n      buildCommands:\n        - npm i\n        - npm run build\n      deployFiles:\n        - ./dist\n        - node_modules\n        - package.json\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      envVariables:\n        DATABASE_HOST: db\n        DATABASE_NAME: db\n        DATABASE_PASSWORD: ${db_password}\n        DATABASE_PORT: \"5432\"\n        DATABASE_USERNAME: db\n        SMTP_EMAIL_FROM: recipe@zerops.io\n        SMTP_HOST: mailpit\n        SMTP_PASS: \"\"\n        SMTP_PORT: \"1025\"\n        SMTP_USER: \"\"\n        STORAGE_ACCESS_KEY_ID: ${storage_accessKeyId}\n        STORAGE_ENDPOINT: ${storage_apiUrl}\n        STORAGE_REGION: us-east-1\n        STORAGE_S3_BUCKET_NAME: ${storage_bucketName}\n        STORAGE_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n      initCommands:\n        - zsc execOnce $ZEROPS_appVersionId npm run typeorm:migrate\n      start: npm run start:prod\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nestjs/refs/heads/main/zerops.yml"
  },
  {
    "id": "echo",
    "recipeId": "zeropsio/recipe-echo",
    "slug": "echo",
    "tag": "Echo",
    "logo": "echo",
    "title": "Echo",
    "listed": true,
    "category": "backend",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-echo\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-echo\n    enableSubdomainAccess: true\n\n  - hostname: db\n    priority: 10\n    type: postgresql@16\n    mode: NON_HA\n\n  - hostname: storage\n    type: object-storage\n    priority: 10\n    objectStoragePolicy: public-read\n    objectStorageSize: 5\n\n  - hostname: redis\n    type: keydb@6\n    priority: 10\n    mode: NON_HA\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: adminer\n    type: php-apache@8.1\n    buildFromGit: https://github.com/zeropsio/recipe-adminer\n    enableSubdomainAccess: true",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-echo"
      }
    ],
    "desc": "  <a href=\"https://echo.labstack.com/\" target=\"_blank\">Echo</a> is a high performance, extensible, minimalist Go web framework. This recipe aims to showcase a basic Echo server-side rendered web app and how to integrate it with <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a>, all through a simple file upload demo application.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Load balanced</strong> Echo web app running on clean <strong>Zerops Alpine</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Zerops <strong>Object Storage</strong> (S3 compatible) service file storage</li>\n        <li>Zerops <strong>KeyDB 6</strong> service as Redis-compatible session storage</li>\n        <li>Cloud-ready <strong>database migration</strong> and initial <strong>data seeding</strong></li>\n        <li>Utilization of Zerops built-in <strong>environment and secret variables</strong> system</li>\n        <li>Logs accessible through Zerops GUI</li>\n        <li><strong><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a></strong> as <strong>SMTP mock server</strong></li>\n        <li><strong><a href=\"https://www.adminer.org\" target=\"_blank\">Adminer</a></strong> for <strong>quick database management</strong> tool</li>\n        <li>Unlocked development experience:\n          <ul>\n            <li>Access to database and mail mock through Zerops project VPN (<em>zcli vpn up</em>)</li>\n            <li>Prepared <em>.env.dist</em> file (<em>cp .env.dist .env</em> and change ***** secrets found in Zerops GUI)</li>\n            <li>Run <em>npm install</em> to be able to re-build <em>tailwind.css</em> (<em>npm run build</em>)</li>\n            <li>Optional: install and use auto-reloading feature <a href=\"https://github.com/air-verse/air\" target=\"_blank\">air</a></li>\n          </ul>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use highly available version of the KeyDB store (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>redis</em> service section)</li>\n        <li>Use at least two containers for Echo service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>app</em> service section)</li>\n        <li>Use production-ready third-party SMTP server instead of Mailpit (change <em>MAIL_</em> secret variables in recipe YAML <em>app</em> service)</li>\n        <li>Disable public access to Adminer or remove it altogether (remove service <em>adminer</em> from recipe YAML)</li>\n        <li>Secure cookies with <em>Domain</em> attribute set to your domain</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Echo app to efficiently run on Zerops, these are the general steps we took:</p>\n      <ul>\n        <li>Use <em>os.Stdout</em> as logger output</li>\n        <li>Disable HTTPS termination, since the app will run behind our automatic SSL load balancer proxy</li>\n      </ul>\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: go@latest\n      buildCommands:\n        - go build -v -o app main.go\n      deployFiles:\n        - static/\n        - app\n    run:\n      ports:\n        - port: 8080\n          httpSupport: true\n      envVariables:\n        DB_HOST: db\n        DB_PORT: $db_port\n        DB_USER: $db_user\n        DB_PASSWORD: $db_password\n        S3_ENDPOINT: $storage_apiUrl\n        S3_ACCESS_KEY_ID: $storage_accessKeyId\n        S3_SECRET_ACCESS_KEY: $storage_secretAccessKey\n        S3_BUCKET: $storage_bucketName\n        SMTP_HOST: mailpit\n        SMTP_PORT: \"1025\"\n        REDIS_HOST: redis\n        REDIS_PORT: $redis_port\n      initCommands:\n        - zsc execOnce seed -- /var/www/app -seed\n      start: /var/www/app\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-echo/refs/heads/main/zerops.yml"
  },
  {
    "id": "laravel",
    "recipeId": "zeropsio/recipe-laravel-jetstream",
    "slug": "laravel",
    "tag": "Laravel",
    "logo": "laravel",
    "category": "backend",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-laravel\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-laravel-jetstream\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_NAME: ZeropsLaravel\n      APP_DEBUG: true\n      APP_ENV: production\n      APP_KEY: <@generateRandomString(<32>)>\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: adminer\n    type: php-apache@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-adminer@main\n    enableSubdomainAccess: true",
    "listed": true,
    "title": "Laravel Jetstream",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-laravel-jetstream"
      }
    ],
    "desc": "<a href=\"https://jetstream.laravel.com/introduction.html\" target=\"_blank\">Laravel Jetstream</a> is an advanced starter kit by Laravel. Zerops recipe for Jetstream includes all the advanced functionality — session and cache stored in Redis and files stored in Object Storage, this makes it perfectly suitable for production of any size.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Load balanced Laravel + Inertia.js running on <strong>Zerops PHP + nginx</strong> service</a>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Zerops KeyDB (<strong>Redis</strong>) service for session and cache</li>\n        <li>Zerops <strong>Object Storage</strong> (S3 compatible) service as file system</li>\n        <li>Proper setup for Laravel <strong>cache</strong>, <strong>optimization</strong> and <strong>database migrations</strong></li>\n        <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI</li>\n        <li>Utilization of Zerops built in <strong>environment variables</strong> system</li>\n        <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML <em>db</em> service)</li>\n        <li>Use at least two containers for Jetstream service to achieve high reliability, resilience (add <em>minContainers: 2</em> in recipe YAML <em>app</em> service)</li>\n        <li>Use production-ready third party SMTP server instead of Mailpit (change <em>MAIL_*</em> secret variables in recipe YAML <em>app</em> service)</li>\n      </ul>\n\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Laravel/Jetstream app to efficiently run on Zerops, these are the general steps we took:</p>\n\n      <ul>\n        <li>Add <a href=\"https://github.com/zeropsio/recipe-laravel-jetstream/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> to your repository, our example includes idempotent migrations, caching and optimized build process</li>\n        <li>Add <a href=\"https://github.com/zeropsio/recipe-laravel-jetstream/blob/main/composer.json#L14\" target=\"_blank\">league/flysystem-aws-s3-v3</a> to your composer.json to support Object Storage file system\n        <li>Setup <a href=\"https://github.com/zeropsio/recipe-laravel-jetstream/blob/main/config/jetstream.php#L79\" target=\"_blank\">Jetstream config</a> to use object storage for file system</li>\n        <li>Utilize Zerops <a href=\"https://github.com/zeropsio/recipe-laravel-jetstream/blob/main/zerops.yml#L25-L75\" target=\"_blank\">environment variables</a> and <a href=\"https://github.com/zeropsio/recipe-laravel-jetstream/blob/main/zerops-project-import.yml#L12-L16\" target=\"_blank\">secrets</a> to setup S3 for file system, Redis for cache and sessions, and trusted proxies to work with reverse proxy load balancer</li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.4\n        - nodejs@18\n      os: ubuntu\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - npm install\n        - npm run build\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n        - node_modules\n        - package-lock.json\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.4\n      os: ubuntu\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n        ASSET_URL: ${APP_URL}\n        VITE_APP_NAME: ${APP_NAME}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n        DB_USERNAME: ${db_user}\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: ZeropsLaravel\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        BCRYPT_ROUNDS: 12\n        TRUSTED_PROXIES: \"*\"\n        FILESYSTEM_DISK: s3\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - php artisan migrate --isolated --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-laravel-jetstream/refs/heads/main/zerops.yml"
  },
  {
    "id": "strapi",
    "recipeId": "zeropsio/recipe-strapi",
    "slug": "strapi",
    "tag": "Strapi",
    "logo": "strapi",
    "disabled": true,
    "listed": true,
    "category": "project-utility",
    "importYaml": "project:\n  name: recipe-nestjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: nodejs@20\n    buildFromGit: https://github.com/zeropsio/recipe-nestjs\n    enableSubdomainAccess: true\n    priority: 5\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: app\n    type: static\n    buildFromGit: https://github.com/zeropsio/recipe-backend-ui\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStoragePolicy: public-read\n    objectStorageSize: 2\n    priority: 10\n\n  - hostname: adminer\n    type: php-apache@8.1\n    buildFromGit: https://github.com/zeropsio/recipe-adminer\n    enableSubdomainAccess: true\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true",
    "desc": "Nest.js app. Deployed from GitHub repository <a href=\"https://github.com/zeropsio/recipe-nestjs\">zeropsio/recipe-nestjs</a>",
    "zeropsYmlContent": null,
    "zeropsYmlUrl": null,
    "error": "No repository URL found"
  },
  {
    "id": "django",
    "recipeId": "zeropsio/recipe-django",
    "slug": "django",
    "tag": "Django",
    "logo": "django",
    "title": "Django",
    "listed": true,
    "category": "backend",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-django\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: python@3.12\n    buildFromGit: https://github.com/zeropsio/recipe-django\n    enableSubdomainAccess: true\n    envSecrets:\n      SECRET_KEY: <@generateRandomBytes(<32>) | toString>\n      # Default superuser password can be found in the environment variables section of the service in GUI.\n      DJANGO_SUPERUSER_PASSWORD: <@generateRandomString(<12>)>\n\n  - hostname: db\n    priority: 10\n    type: postgresql@16\n    mode: NON_HA\n\n  - hostname: storage\n    type: object-storage\n    priority: 10\n    objectStoragePolicy: public-read\n    objectStorageSize: 5\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: adminer\n    type: php-apache@8.1\n    buildFromGit: https://github.com/zeropsio/recipe-adminer\n    enableSubdomainAccess: true",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-django"
      }
    ],
    "desc": "<a href=\"https://www.djangoproject.com/\" target=\"_blank\">Django</a> is a high-level Python web framework that encourages rapid development and clean, pragmatic design. This recipe aims to showcase an advanced cloud-like integration of Django in Zerops through a simple file upload demo application.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Load balanced</strong> Django web app running on <strong>Zerops Python</strong> service</li>\n        <li>Served by production-ready application server <a href=\"https://gunicorn.org/\" target=\"_blank\">Gunicorn</a></li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Zerops <strong>Object Storage</strong> (S3 compatible) service as file system</li>\n        <li>Automatic Django <strong>database migrations</strong>, <strong>static files collection</strong> and <strong>superuser seeding</strong></li>\n        <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI</li>\n        <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n        <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong></li>\n        <li><a href=\"https://www.adminer.org\" target=\"_blank\">Adminer</a> for <strong>quick database management</strong> tool</li>\n        <li>\n          Unlocked development experience:\n          <ul>\n            <li>Access to database and mail mock through Zerops project VPN (zcli vpn up)</li>\n            <li>Prepared <em>.env.dist</em> file (<em>cp .env.dist .env</em> and change ***** secrets found in Zerops GUI)</li>\n          </ul>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for the Django service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n        <li>Use production-ready third-party SMTP server instead of Mailpit (change <em>MAIL_*</em> secret variables in recipe YAML, <em>api</em> service section)</li>\n        <li>Since the Django app will run behind our HTTP balancer proxy, add your domain/subdomains to <em>recipe/settings.py</em> <em>CSRF_TRUSTED_ORIGINS</em> setting or add <em>APP_DOMAIN</em> secret variable (in recipe YAML, <em>app</em> service section)<li>\n        <li>Disable public access to Adminer or remove it altogether (remove service adminer from recipe YAML)</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Django app to efficiently run on Zerops, these are the general steps we took:</p>\n      <ul>\n        <li>Add <a href=\"https://github.com/zeropsio/recipe-django/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> to your repository, our example includes idempotent migrations, static files collection and optimized build process</li>\n        <li>Run <em>pip install django-storages</em> and change storage settings section in your <em>project/settings.py</em> to support S3 compatible Object Storage file system (more info <a href=\"https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html\" target=\"_blank\">here</a>)</li>\n        <li>Utilize Zerops <a href=\"https://github.com/zeropsio/recipe-django/blob/main/zerops.yml#L18-L30\" target=\"_blank\">environment variables</a> and <a href=\"https://github.com/zeropsio/recipe-django/blob/main/zerops.yml#L18-L30\" target=\"_blank\">secrets</a> to set up S3 for file system, database access, mailer and trusted hosts to work with reverse proxy load balancer</li>\n        <li>Add init commands for your deployments to <a href=\"https://github.com/zeropsio/recipe-django/blob/main/zerops.yml#L34-L39\" target=\"_blank\">migrate database and collect static images</a></li>\n      </ul>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      os: alpine\n      base: python@3.12\n      addToRunPrepare:\n        - requirements.txt\n      deployFiles:\n        - files/\n        - recipe/\n        - manage.py\n        - gunicorn.conf.py\n    run:\n      os: alpine\n      base: python@3.12\n      prepareCommands:\n        - sudo apk add tzdata\n        - pip install --no-cache-dir -r requirements.txt\n      envVariables:\n        PYTHONDONTWRITEBYTECODE: \"1\"\n        PYTHONUNBUFFERED: \"1\"\n        APP_SUBDOMAIN_URL: $zeropsSubdomain\n        DB_HOST: $db_hostname\n        DB_PORT: $db_port\n        DB_USER: $db_user\n        DB_PASSWORD: $db_password\n        USE_S3: \"1\"\n        S3_ACCESS_KEY_ID: $storage_accessKeyId\n        S3_SECRET_ACCESS_KEY: $storage_secretAccessKey\n        S3_BUCKET_NAME: $storage_bucketName\n        S3_ENDPOINT_URL: $storage_apiUrl\n        MAIL_HOST: mailpit\n        MAIL_PORT: \"1025\"\n      ports:\n        - port: 8000\n          httpSupport: true\n      initCommands:\n        # Exec everytime we build a new app version.\n        - zsc execOnce migrate-${ZEROPS_appVersionId} -- python manage.py migrate\n        - zsc execOnce collectstatic-${ZEROPS_appVersionId} -- python manage.py collectstatic --no-input --verbosity 3\n        # Exec just once.\n        - zsc execOnce createsuperuser -- python manage.py createsuperuser --no-input --username admin --email admin@example.com || true\n      start: gunicorn recipe.wsgi\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-django/refs/heads/main/zerops.yml"
  },
  {
    "id": "nette",
    "recipeId": "zeropsio/recipe-nette",
    "slug": "nette",
    "tag": "Nette",
    "logo": "nette",
    "category": "backend",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-nette\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: php-apache@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-nette@main\n    enableSubdomainAccess: true\n    envSecrets:\n      ADMIN_PASSWORD: <@generateRandomString(<24>)>\n      APP_ENV: dev # for this example, in production it should be set to `prod` (or anything else than `dev`)\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: keydb@6\n    mode: NON_HA\n    priority: 10\n\n  - hostname: adminer\n    type: php-apache@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-adminer@main\n    enableSubdomainAccess: true\n    maxContainers: 1",
    "listed": true,
    "title": "Nette",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nette"
      }
    ],
    "desc": "<a href=\"https://github.com/nette-examples/quickstart\" target=\"_blank\">Nette QuickStart</a> is a very simple web application based on Nette Framework. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> recipe for Nette QuickStart includes session and cache stored in Redis, and PostgreSQL DB with <a href=\"https://nextras.org/migrations/\" target=\"_blank\">Nextras migrations</a>.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Nette running on a load balanced <strong>Zerops PHP + Nginx</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Zerops KeyDB (<strong>Redis</strong>) service for session and cache</li>\n        <li>Setup for Nextras <strong>database migrations</strong> with automatic admin user creation</li>\n        <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI</li>\n        <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n        <li><a href=\"https://www.adminer.org/en/\" target=\"_blank\">Adminer</a> for <strong>quick database management</strong> tool</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for Nette service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>app</em> service section)</li>\n        <li>Disable public access to Adminer or remove it altogether (remove service <em>adminer</em> from recipe YAML)</li>\n        <li>Set <em>APP_ENV</em> to <em>prod</em> in <em>envSecrets</em>, <em>app</em> section of import YAML</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Nette app to efficiently run on Zerops, these are the general steps we took:</p>\n      <ul>\n        <li>Add <a href=\"https://github.com/zeropsio/recipe-nette/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> to your repository, our example includes idempotent migrations, caching, and optimized build process</li>\n        <li>Add <pre>$configurator->addDynamicParameters(['env' => getenv()]);</pre> to your <a href=\"https://github.com/zeropsio/recipe-nette/blob/main/app/Bootstrap.php:22\" target=\"_blank\">./app/Bootstrap.php</a> file to use env variables in your neon configuration files</li>\n        <li>Set debug mode according to <em>APP_ENV</em> env variable in your <a href=\"https://github.com/zeropsio/recipe-nette/blob/main/app/Bootstrap.php:27\" target=\"_blank\">./app/Bootstrap.php</a> file</li>\n        <li>Add <a href=\"https://github.com/nette/redis\" target=\"_blank\">nette/redis</a> to your composer.json to store sessions in Redis\n          <ul>\n            <li>configure it according to our <a href=\"https://github.com/zeropsio/recipe-nette/blob/main/config/common.neon#L44\" target=\"_blank\">./config/common.neon</a> file</li>\n          </ul>\n        </li>\n        <li>Add <a href=\"https://github.com/nette/monolog\" target=\"_blank\">nette/monolog</a> to your composer.json to log into the syslog\n          <ul>\n            <li>utilize the following handler: <em>Monolog\\Handler\\SyslogHandler(app)</em> (see our <a href=\"https://github.com/MichalSalon/recipe-nette/blob/main/config/common.neon#L38\" target=\"_blank\">./config/common.neon</a>)</li>\n          </ul>\n        </li>\n        <li>Add <a href=\"https://github.com/nextras/migrations/\" target=\"_blank\">nextras/migrations</a> to your composer.json to utilize automated DB migrations\n          <ul>\n            <li>create <em>./migrations</em> folder structure similar to this repo (we moved content of <em>database.sql</em> into it)</li>\n            <li>SQLite (<em>./data/blog.sqlite</em>) was replaced by PostgreSQL database container</li>\n          </ul>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Additional info</h2>\n      <p>Admin login for this recipe is <em>admin</em> with automatically generated password, which can be found under <em>ADMIN_PASSWORD</em> name in Zerops Environment variables section of <em>app</em> service.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: php@8.3\n      os: alpine\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /\n    run:\n      base: php-apache@8.3\n      os: alpine\n      documentRoot: www/\n      initCommands:\n        - zsc execOnce $appVersionId -- php /var/www/bin/console migrations:continue\n        - chown -R zerops:zerops /var/www/temp/\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nette/refs/heads/main/zerops.yml"
  },
  {
    "id": "contributte",
    "recipeId": "zeropsio/recipe-nette-contributte",
    "slug": "contributte",
    "tag": "Contributte",
    "logo": "contributte",
    "category": "backend",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-contributte\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: php-apache@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-nette-contributte@main\n    enableSubdomainAccess: true\n    envSecrets:\n      ADMIN_PASSWORD: <@generateRandomString(<24>)>\n      NETTE_DEBUG: 1 # for this example, in production it should be set to `0`\n      NETTE_ENV: dev # for this example, in production it should be set to `prod`\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: keydb@6\n    mode: NON_HA\n    priority: 10\n\n  - hostname: adminer\n    type: php-apache@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-adminer@main\n    enableSubdomainAccess: true\n    maxContainers: 1\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit@main\n    enableSubdomainAccess: true\n    maxContainers: 1",
    "listed": true,
    "title": "Contributte",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nette-contributte"
      }
    ],
    "desc": "<a href=\"https://github.com/contributte/webapp-skeleton\" target=\"_blank\">Nette Contributte</a> is a web application skeleton based on Nette Framework, Doctrine and Contributte libraries. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> recipe for Contributte skeleton includes session and cache stored in Redis, and PostgreSQL DB with doctrine migrations.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Nette running on a load balanced <strong>Zerops PHP + Nginx</strong> service</li>\n        <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n        <li>Zerops KeyDB (<strong>Redis</strong>) service for session and cache</li>\n        <li>Proper setup for Nettrine <strong>cache</strong>, <strong>optimization</strong>, and <strong>database migrations</strong></li>\n        <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI</li>\n        <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n        <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong></li>\n        <li><a href=\"https://www.adminer.org/en/\" target=\"_blank\">Adminer</a> for <strong>quick database management</strong> tool</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>Base of the recipe is ready for production, the difference comes down to:</p>\n      <ul>\n        <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n        <li>Use at least two containers for Nette service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>app</em> service section)</li>\n        <li>Use production-ready third-party SMTP server instead of Mailpit (change <em>parameters.smtp</em> variables in <em>./config/app/parameters.neon</em> file)</li>\n        <li>Disable public access to Adminer or remove it altogether (remove service <em>adminer</em> from recipe YAML)</li>\n        <li>Set <em>NETTE_DEBUG</em> to <em>0</em> and <em>NETTE_ENV</em> to <em>prod</em> in <em>envSecrets</em>, <em>app</em> section of import YAML</li>\n        <li>Create <em>admin</em> user manually through <em>create-user</em> console command (in dev mode this is handled by fixtures) and\n          <ul>\n            <li>remove following line from <em>zerops.yml</em>:<br />\n                <pre>- zsc execOnce ${appVersionId}-fixtures -- php /var/www/bin/console doctrine:fixtures:load --no-interaction</pre>\n            </li>\n            <li>add <em>--no-dev</em> to the following line in <em>zerops.yml</em>:\n              <pre>composer install --optimize-autoloader</pre>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Nette app to efficiently run on Zerops, these are the general steps we took:</p>\n      <ul>\n        <li>Add <a href=\"https://github.com/zeropsio/recipe-contributte/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> to your repository, our example includes idempotent migrations, caching, and optimized build process</li>\n        <li>Add <pre>$configurator->addDynamicParameters(['env' => getenv()]);</pre> to your <a href=\"https://github.com/zeropsio/recipe-contributte/blob/main/app/Bootstrap.php:25\" target=\"_blank\">./app/Bootstrap.php</a> file to use env variables in your neon configuration files</li>\n        <li>Add <a href=\"https://github.com/contributte/redis\" target=\"_blank\">contributte/redis</a> to your composer.json to store sessions in Redis\n          <ul>\n            <li>configure it according to our <a href=\"https://github.com/zeropsio/recipe-contributte/blob/main/config/env/base.neon#L55\" target=\"_blank\">./config/env/base.neon</a> file</li>\n          </ul>\n        </li>\n        <li>Add <a href=\"https://github.com/contributte/monolog\" target=\"_blank\">contributte/monolog</a> to your composer.json to log into the syslog\n          <ul>\n            <li>utilize the following handler: <em>Monolog\\Handler\\SyslogHandler(app)</em> (see our <a href=\"https://github.com/MichalSalon/recipe-contributte/blob/main/config/ext/contributte.neon#L31\" target=\"_blank\">./config/ext/contributte.neon</a>)</li>\n          </ul>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Additional info</h2>\n      <p>Admin login for this recipe is <em>admin@admin.cz</em> with automatically generated password, which can be found under <em>ADMIN_PASSWORD</em> name in Zerops Environment variables section of <em>app</em> service.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: php@8.3\n      os: alpine\n      buildCommands:\n        - composer install --optimize-autoloader\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /\n\n    run:\n      base: php-apache@8.3\n      os: alpine\n      documentRoot: www/\n      initCommands:\n        - zsc execOnce ${appVersionId}-migration -- php /var/www/bin/console migrations:migrate --no-interaction --allow-no-migration\n        - zsc execOnce ${appVersionId}-fixtures -- php /var/www/bin/console doctrine:fixtures:load --no-interaction\n        - chown -R zerops:zerops /var/www/var/tmp/\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nette-contributte/refs/heads/main/zerops.yml"
  },
  {
    "id": "umami",
    "recipeId": "zeropsio/recipe-umami",
    "slug": "umami",
    "tag": "Umami",
    "logo": "umami",
    "disabled": true,
    "listed": true,
    "category": "project-utility",
    "importYaml": "project:\n  name: recipe-nestjs\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: api\n    type: nodejs@20\n    buildFromGit: https://github.com/zeropsio/recipe-nestjs\n    enableSubdomainAccess: true\n    priority: 5\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: app\n    type: static\n    buildFromGit: https://github.com/zeropsio/recipe-backend-ui\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStoragePolicy: public-read\n    objectStorageSize: 2\n    priority: 10\n\n  - hostname: adminer\n    type: php-apache@8.1\n    buildFromGit: https://github.com/zeropsio/recipe-adminer\n    enableSubdomainAccess: true\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true",
    "desc": "Nest.js app. Deployed from GitHub repository <a href=\"https://github.com/zeropsio/recipe-nestjs\">zeropsio/recipe-nestjs</a>",
    "zeropsYmlContent": null,
    "zeropsYmlUrl": null,
    "error": "No repository URL found"
  },
  {
    "id": "ghost",
    "recipeId": "zeropsio/recipe-ghost",
    "slug": "ghost",
    "tag": "Ghost",
    "logo": "ghost",
    "title": "Ghost",
    "listed": true,
    "category": "project-utility",
    "importYaml": "project:\n  name: ghost-app\n  tags:\n    - zerops-recipe\nservices:\n  - hostname: db\n    type: mariadb@10.6\n    mode: NON_HA\n    priority: 1\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-objects-read\n    priority: 1\n\n  - hostname: ghost\n    type: nodejs@18\n    verticalAutoscaling:\n      minRam: 1\n    maxContainers: 1\n    buildFromGit: https://github.com/zeropsio/recipe-ghost@main\n    enableSubdomainAccess: true\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit@main\n    enableSubdomainAccess: true",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-ghost"
      }
    ],
    "desc": "Ghost is an open source blogging platform that can be used as a headless CMS. This recipe showcases how to properly setup and run Ghost on Zerops.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Zerops <strong>MariaDB 10.6</strong> service as database</li>\n        <li>Zerops <strong>Object Storage</strong> (S3 compatible) service as file system</li>\n        <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI</li>\n        <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n        <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>How to use installed recipe in Zerops GUI</h2>\n      <ul>\n        <li>Wait till the moment the recipe's services are installed and initialized.</li>\n        <li>Open the auto-generated subdomain URL available for the <em>ghost</em> service.</li>\n        <li>Switch to the admin client GUI through adding <em>/ghost</em> route to the subdomain URL.</li>\n        <li>Fill out the form to register as an administrator of the new Ghost site.</li>\n        <li>Open the auto-generated subdomain URL available for the <em>mailpit</em> service.</li>\n        <li>Check a confirmation email sent from the Ghost service.</li>\n        <li>Use installed and running Ghost CMS to publish articles.</li>\n        <li>Register new subscribers to consume the Ghost site content.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development mode</h2>\n      <p>The difference may come down to:</p>\n      <ul>\n        <li>Use the highly available version of the MariaDB database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section) in which case Galera cluster is created. Use SQL command <em>SET GLOBAL wsrep_sync_wait=1;</em> to globally set the synchronization among database nodes because of the actual state of Ghost's support for database HA. The best place where to do it is in the <em>run.initCommands</em> of the <a href=\"https://github.com/zeropsio/recipe-ghost/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file.</li>\n        <li>Think about some caching mechanism (such as Zerops KeyDB service, CDN) instead of the database HA mode because of the static character of the Ghost pages.</li>\n        <li>Use a production-ready third-party SMTP server instead of Mailpit.</li>\n        <li><strong>WARNING</strong><br>Ghost does not support high availability (running on multiple container), make sure vertical autoscaling is fixed on 1 container (default in this recipe).</li>\n      </ul>\n     </section>\n     ",
    "zeropsYmlContent": "zerops:\n  - setup: ghost\n    build:\n      base: nodejs@18\n      # os: ubuntu\n      buildCommands:\n        - sudo apk add git jq\n        # - sudo apt update && sudo apt install -y git jq\n        - |\n          cd ./current\n          yarn\n          yarn add ghost-storage-adapter-s3\n          mkdir -p ./content/adapters/storage\n          cp -r ./node_modules/ghost-storage-adapter-s3 ./content/adapters/storage/s3\n      deployFiles:\n        - content\n        - current\n        - versions\n        - .ghost-cli\n        - config.production.json\n    run:\n      base: nodejs@18\n      # os: ubuntu\n      envVariables:\n        AWS_DEFAULT_REGION: us-east-1\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        STORAGE_HOSTNAME: storage\n        GHOST_STORAGE_ADAPTER_S3_PATH_BUCKET: ${storage_bucketName}\n        GHOST_STORAGE_ADAPTER_S3_ASSET_HOST: ${storage_apiUrl}/${GHOST_STORAGE_ADAPTER_S3_PATH_BUCKET}\n        GHOST_STORAGE_ADAPTER_S3_ENDPOINT: ${storage_apiUrl}\n        GHOST_STORAGE_ADAPTER_S3_FORCE_PATH_STYLE: true\n        database__connection__database: ${db_hostname}\n        database__connection__host: ${db_hostname}\n        database__connection__password: ${db_password}\n        database__connection__user: ${db_user}\n        url: ${zeropsSubdomain}\n        REGION: usc1\n      ports:\n        - port: 2368\n          httpSupport: true\n      prepareCommands:\n        - npm install -g ghost-cli\n      start: ghost run\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-ghost/refs/heads/main/zerops.yml"
  },
  {
    "id": "payload",
    "recipeId": "zeropsio/recipe-payload",
    "slug": "payload",
    "tag": "Payload",
    "logo": "payload",
    "title": "Payload",
    "listed": true,
    "category": "project-utility",
    "importYaml": "\n#yamlPreprocessor=on\nproject:\n  name: recipe-payload\n  tags:\n    - zerops-recipe\nservices:\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 1\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 1\n    objectStoragePolicy: private\n    priority: 1\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit@main\n    enableSubdomainAccess: true\n    priority: 1\n    maxContainers: 1\n\n  - hostname: api\n    type: nodejs@20\n    buildFromGit: https://github.com/zeropsio/recipe-payload@main\n    enableSubdomainAccess: true\n    envSecrets:\n      PAYLOAD_SECRET: <@generateRandomString(<24>)>\n    verticalAutoscaling:\n      minRam: 1\n    maxContainers: 1\n",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-payload"
      }
    ],
    "desc": "<a href=\"https://github.com/payloadcms/payload\" target=\"_blank\">Payload CMS</a> is fully open source and can be used both as an app framework and a headless CMS. This recipe showcases how to set up and run Payload on Zerops properly. It was created using the <a href=\"https://www.npmjs.com/package/create-payload-app\" target=\"_blank\">create-payload-app CLI</a>, based on Payload version v3.28.1 and its <a href=\"https://github.com/payloadcms/payload/tree/main/templates/website\" target=\"_blank\">website</a> template.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Zerops <strong>PostgreSQL</strong> 16.2 service as database</li>\n        <li>Zerops <strong>Object Storage</strong> (S3 compatible) service as file system using a private bucket</li>\n        <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI</li>\n        <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n        <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong></li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>How to use installed recipe in Zerops GUI</h2>\n      <ul>\n        <li>Wait till the moment the recipe's services are installed and initialized.</li>\n        <li>Open the auto-generated subdomain URL available for the <strong>api</strong> service.</li>\n        <li><strong>Visit the admin dashboard</strong> through the offered link on the shown page.</li>\n        <li>Register the first administration user and log in to the admin client.</li>\n        <li>Click the <strong>Seed your database</strong> link to fill out some content.</li>\n        <li>Using the admin dashboard, you can publish your custom content.</li>\n        <li>Open the auto-generated subdomain URL available for the <strong>mailpit</strong> service.</li>\n        <li>The <strong>Mailpit</strong> SMTP mock server will receive any email sent by the Payload API.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development mode</h2>\n      <p>The difference may come down to:</p>\n      <ul>\n        <li>Use the highly available version of the PostgreSQL database (change <strong>mode</strong> from <strong>NON_HA</strong> to <strong>HA</strong> in recipe YAML, <strong>db</strong> service section) in which case <a href=\"https://patroni.readthedocs.io\">Patroni cluster</a> is created.</li>\n        <li>Think about some caching mechanism (such as Zerops KeyDB or Valkey service, CDN) instead of the database HA mode because of the static character of the Payload pages.</li>\n        <li>Try running Payload CMS on multiple runtime containers in high availability (change <strong>maxContainers</strong> from <strong>1</strong> to <strong>2</strong> or more in recipe YAML, <strong>api</strong> service section).</li>\n        <li>Use a production-ready third-party SMTP server instead of Mailpit.</li>\n      </ul>\n     </section>\n     ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      envVariables:\n        PAYLOAD_SECRET: ${RUNTIME_PAYLOAD_SECRET}\n        DATABASE_URI: ${RUNTIME_DATABASE_URI}\n        NEXT_PUBLIC_SERVER_URL: ${RUNTIME_zeropsSubdomain}\n        S3_ENDPOINT: ${RUNTIME_S3_ENDPOINT}\n        S3_ACCESS_KEY_ID: ${RUNTIME_S3_ACCESS_KEY_ID}\n        S3_SECRET_ACCESS_KEY: ${RUNTIME_S3_SECRET_ACCESS_KEY}\n        S3_BUCKET: ${RUNTIME_S3_BUCKET}\n      base: nodejs@20\n      os: ubuntu\n      buildCommands:\n        - pnpm i\n        - pnpm exec next telemetry disable\n        - zsc test tcp -6 db:5432 --timeout 30s\n        - zsc test tcp -6 mailpit:1025 --timeout 30s\n        # pnpm payload migrate:create initial\n        - pnpm payload generate:importmap\n        - pnpm payload migrate:status\n        - pnpm payload migrate\n        - pnpm build\n      deployFiles:\n        - next.config.js\n        - redirects.js\n        - node_modules\n        - package.json\n        - public\n        - .next\n    run:\n      base: nodejs@20\n      os: ubuntu\n      envVariables:\n        DATABASE_URI: ${db_connectionString}/${db_dbName}\n        NEXT_PUBLIC_SERVER_URL: ${zeropsSubdomain}\n        S3_ENDPOINT: ${storage_apiUrl}\n        S3_ACCESS_KEY_ID: ${storage_accessKeyId}\n        S3_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        S3_BUCKET: ${storage_bucketName}\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-payload/refs/heads/main/zerops.yml"
  },
  {
    "id": "medusa-analog-dev",
    "recipeId": "zeropsio/recipe-medusa-analog-dev",
    "slug": "medusa-analog-dev",
    "tag": "Medusa",
    "logo": "medusa",
    "icon": "medusa",
    "title": "Medusa.js x Analog.js x spartan.ng development environment",
    "listed": false,
    "category": "project-utility",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-medusa-analog\n  corePackage: LIGHT\n  envVariables:\n    NEXT_STORE_URL: https://nextstore-${zeropsSubdomainHost}-8000.prg1.zerops.app\n    SEARCH_URL: https://search-${zeropsSubdomainHost}-7700.prg1.zerops.app\n    ANALOG_STORE_URL: https://analogstore-${zeropsSubdomainHost}-3000.prg1.zerops.app\n    MEDUSA_INSTANCE_URL: https://medusa-${zeropsSubdomainHost}-9000.prg1.zerops.app\n    IMGPROXY_INSTANCE_URL: https://imgproxy-${zeropsSubdomainHost}.prg1.zerops.app\n  tags:\n    - zerops-recipe\n    - development\n\nservices:\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 100\n\n  - hostname: search\n    type: meilisearch@1.10\n    mode: NON_HA\n    enableSubdomainAccess: true\n    priority: 100\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 100\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 100\n\n  - hostname: medusa\n    type: nodejs@22\n    buildFromGit: https://github.com/zeropsio/recipe-medusa\n    enableSubdomainAccess: true\n    envSecrets:\n      ADMIN_CORS: ${zeropsSubdomain}\n      COOKIE_SECRET: <@generateRandomString(<32>)>\n      JWT_SECRET: <@generateRandomString(<32>)>\n      SUPERADMIN_EMAIL: admin@example.com\n      SUPERADMIN_PASSWORD: s4lt_<@generateRandomString(<16>)>\n    verticalAutoscaling:\n      minRam: 0.5\n    priority: 90\n\n  - hostname: nextstore\n    type: nodejs@22\n    buildFromGit: https://github.com/zeropsio/recipe-medusa-nextstore\n    enableSubdomainAccess: true\n    envSecrets:\n      REVALIDATE_SECRET: <@generateRandomString(<16>)>\n    verticalAutoscaling:\n      minRam: 0.5\n\n  - hostname: analogstore\n    type: nodejs@22\n    buildFromGit: https://github.com/zeropsio/recipe-medusa-analogstore\n    enableSubdomainAccess: true\n    verticalAutoscaling:\n      minRam: 0.5",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-medusa"
      }
    ],
    "desc": "Medusa.js is a powerfull and flexible commerce platform, Zerops provides the infrastructure needed to utilize Medusa to its fullest.",
    "content": "",
    "zeropsYmlContent": "zerops:\n  - setup: medusa\n    build:\n      envVariables:\n        BACKEND_URL: ${MEDUSA_INSTANCE_URL}\n      base: nodejs@22\n      buildCommands:\n        - yarn\n        - yarn build\n      deployFiles:\n        - .medusa/server/~\n        - tsconfig.json\n        - node_modules\n        - ./src/scripts/seed-files\n      cache: node_modules\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 9000\n          path: /health\n    run:\n      base: nodejs@22\n      envVariables:\n        DATABASE_TYPE: postgres\n        NODE_ENV: production\n        BACKEND_URL: ${MEDUSA_INSTANCE_URL}\n        STORE_CORS: ${NEXT_STORE_URL},${ANALOG_STORE_URL},http://localhost:5173,http://localhost:3000\n        DATABASE_URL: postgresql://${db_user}:${db_password}@${db_hostname}:5432/${db_hostname}?ssl_mode=disable\n        MINIO_BUCKET: ${storage_bucketName}\n        MINIO_ENDPOINT: ${storage_apiUrl}\n        MINIO_SECRET_KEY: ${storage_secretAccessKey}\n        MINIO_ACCESS_KEY: ${storage_accessKeyId}\n        REDIS_URL: redis://${redis_hostname}:6379\n        CACHE_REDIS_URL: redis://${redis_hostname}:6379\n        EVENTS_REDIS_URL: redis://${redis_hostname}:6379\n        MEILISEARCH_HOST: http://${search_hostname}:${search_port}\n        MEILISEARCH_API_KEY: ${search_masterKey}\n      initCommands:\n        # with each deploy\n        - zsc execOnce ${appVersionId}_migration -- yarn migrate\n        - zsc execOnce ${appVersionId}_links -- yarn syncLinks\n        # initial setup, happens once in service lifetime\n        - zsc execOnce createInitialSuperadmin -- yarn createInitialSuperadmin\n        - zsc execOnce seedInitialData -- yarn seedInitialData\n        - zsc execOnce setInitialPublishableKey -- yarn setInitialPublishableKey\n        - zsc execOnce addInitialSearchDocuments -- yarn addInitialSearchDocuments\n      ports:\n        - port: 9000\n          httpSupport: true\n      start: yarn start\n      healthCheck:\n        httpGet:\n          port: 9000\n          path: /health\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-medusa/refs/heads/main/zerops.yml"
  },
  {
    "id": "medusa-next-prod",
    "recipeId": "zeropsio/recipe-medusa-next-prod",
    "slug": "medusa-next-prod",
    "tag": "Medusa",
    "logo": "medusa",
    "icon": "medusa",
    "title": "Medusa.js x Next.js production environment",
    "listed": false,
    "category": "project-utility",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-medusa-next\n  corePackage: SERIOUS\n  envVariables:\n    NEXT_STORE_URL: https://nextstore-${zeropsSubdomainHost}-8000.prg1.zerops.app\n    SEARCH_URL: https://search-${zeropsSubdomainHost}-7700.prg1.zerops.app\n    MEDUSA_INSTANCE_URL: https://medusa-${zeropsSubdomainHost}-9000.prg1.zerops.app\n    IMGPROXY_INSTANCE_URL: https://imgproxy-${zeropsSubdomainHost}.prg1.zerops.app\n  tags:\n    - zerops-recipe\n    - production\n\nservices:\n  - hostname: db\n    type: postgresql@16\n    mode: HA\n    priority: 100\n\n  - hostname: search\n    type: meilisearch@1.10\n    mode: NON_HA\n    enableSubdomainAccess: true\n    priority: 100\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: HA\n    priority: 100\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 100\n\n  - hostname: medusa\n    type: nodejs@22\n    buildFromGit: https://github.com/zeropsio/recipe-medusa\n    enableSubdomainAccess: true\n    envSecrets:\n      ADMIN_CORS: ${zeropsSubdomain}\n      COOKIE_SECRET: <@generateRandomString(<32>)>\n      JWT_SECRET: <@generateRandomString(<32>)>\n      SUPERADMIN_EMAIL: admin@example.com\n      SUPERADMIN_PASSWORD: s4lt_<@generateRandomString(<16>)>\n    verticalAutoscaling:\n      minRam: 0.5\n    minContainers: 2\n    priority: 90\n\n  - hostname: nextstore\n    type: nodejs@22\n    buildFromGit: https://github.com/zeropsio/recipe-medusa-nextstore\n    enableSubdomainAccess: true\n    envSecrets:\n      REVALIDATE_SECRET: <@generateRandomString(<16>)>\n    verticalAutoscaling:\n      minRam: 0.5",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-medusa"
      }
    ],
    "desc": "Medusa.js is a powerfull and flexible commerce platform, Zerops provides the infrastructure needed to utilize Medusa to its fullest.",
    "content": "",
    "zeropsYmlContent": "zerops:\n  - setup: medusa\n    build:\n      envVariables:\n        BACKEND_URL: ${MEDUSA_INSTANCE_URL}\n      base: nodejs@22\n      buildCommands:\n        - yarn\n        - yarn build\n      deployFiles:\n        - .medusa/server/~\n        - tsconfig.json\n        - node_modules\n        - ./src/scripts/seed-files\n      cache: node_modules\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 9000\n          path: /health\n    run:\n      base: nodejs@22\n      envVariables:\n        DATABASE_TYPE: postgres\n        NODE_ENV: production\n        BACKEND_URL: ${MEDUSA_INSTANCE_URL}\n        STORE_CORS: ${NEXT_STORE_URL},${ANALOG_STORE_URL},http://localhost:5173,http://localhost:3000\n        DATABASE_URL: postgresql://${db_user}:${db_password}@${db_hostname}:5432/${db_hostname}?ssl_mode=disable\n        MINIO_BUCKET: ${storage_bucketName}\n        MINIO_ENDPOINT: ${storage_apiUrl}\n        MINIO_SECRET_KEY: ${storage_secretAccessKey}\n        MINIO_ACCESS_KEY: ${storage_accessKeyId}\n        REDIS_URL: redis://${redis_hostname}:6379\n        CACHE_REDIS_URL: redis://${redis_hostname}:6379\n        EVENTS_REDIS_URL: redis://${redis_hostname}:6379\n        MEILISEARCH_HOST: http://${search_hostname}:${search_port}\n        MEILISEARCH_API_KEY: ${search_masterKey}\n      initCommands:\n        # with each deploy\n        - zsc execOnce ${appVersionId}_migration -- yarn migrate\n        - zsc execOnce ${appVersionId}_links -- yarn syncLinks\n        # initial setup, happens once in service lifetime\n        - zsc execOnce createInitialSuperadmin -- yarn createInitialSuperadmin\n        - zsc execOnce seedInitialData -- yarn seedInitialData\n        - zsc execOnce setInitialPublishableKey -- yarn setInitialPublishableKey\n        - zsc execOnce addInitialSearchDocuments -- yarn addInitialSearchDocuments\n      ports:\n        - port: 9000\n          httpSupport: true\n      start: yarn start\n      healthCheck:\n        httpGet:\n          port: 9000\n          path: /health\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-medusa/refs/heads/main/zerops.yml"
  },
  {
    "id": "medusa-next-dev",
    "recipeId": "zeropsio/recipe-medusa-next-dev",
    "slug": "medusa-next-dev",
    "tag": "Medusa",
    "logo": "medusa",
    "icon": "medusa",
    "title": "Medusa.js x Next.js development environment",
    "listed": false,
    "category": "project-utility",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-medusa-next\n  corePackage: LIGHT\n  envVariables:\n    NEXT_STORE_URL: https://nextstore-${zeropsSubdomainHost}-8000.prg1.zerops.app\n    SEARCH_URL: https://search-${zeropsSubdomainHost}-7700.prg1.zerops.app\n    MEDUSA_INSTANCE_URL: https://medusa-${zeropsSubdomainHost}-9000.prg1.zerops.app\n    IMGPROXY_INSTANCE_URL: https://imgproxy-${zeropsSubdomainHost}.prg1.zerops.app\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 100\n\n  - hostname: search\n    type: meilisearch@1.10\n    mode: NON_HA\n    enableSubdomainAccess: true\n    priority: 100\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 100\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 100\n\n  - hostname: medusa\n    type: nodejs@22\n    buildFromGit: https://github.com/zeropsio/recipe-medusa\n    enableSubdomainAccess: true\n    envSecrets:\n      ADMIN_CORS: ${zeropsSubdomain}\n      COOKIE_SECRET: <@generateRandomString(<32>)>\n      JWT_SECRET: <@generateRandomString(<32>)>\n      SUPERADMIN_EMAIL: admin@example.com\n      SUPERADMIN_PASSWORD: s4lt_<@generateRandomString(<16>)>\n    verticalAutoscaling:\n      minRam: 0.5\n    priority: 90\n\n  - hostname: nextstore\n    type: nodejs@22\n    buildFromGit: https://github.com/zeropsio/recipe-medusa-nextstore\n    enableSubdomainAccess: true\n    envSecrets:\n      REVALIDATE_SECRET: <@generateRandomString(<16>)>\n    verticalAutoscaling:\n      minRam: 0.5",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-medusa"
      }
    ],
    "desc": "Medusa.js is a powerfull and flexible commerce platform, Zerops provides the infrastructure needed to utilize Medusa to its fullest.",
    "content": "",
    "zeropsYmlContent": "zerops:\n  - setup: medusa\n    build:\n      envVariables:\n        BACKEND_URL: ${MEDUSA_INSTANCE_URL}\n      base: nodejs@22\n      buildCommands:\n        - yarn\n        - yarn build\n      deployFiles:\n        - .medusa/server/~\n        - tsconfig.json\n        - node_modules\n        - ./src/scripts/seed-files\n      cache: node_modules\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 9000\n          path: /health\n    run:\n      base: nodejs@22\n      envVariables:\n        DATABASE_TYPE: postgres\n        NODE_ENV: production\n        BACKEND_URL: ${MEDUSA_INSTANCE_URL}\n        STORE_CORS: ${NEXT_STORE_URL},${ANALOG_STORE_URL},http://localhost:5173,http://localhost:3000\n        DATABASE_URL: postgresql://${db_user}:${db_password}@${db_hostname}:5432/${db_hostname}?ssl_mode=disable\n        MINIO_BUCKET: ${storage_bucketName}\n        MINIO_ENDPOINT: ${storage_apiUrl}\n        MINIO_SECRET_KEY: ${storage_secretAccessKey}\n        MINIO_ACCESS_KEY: ${storage_accessKeyId}\n        REDIS_URL: redis://${redis_hostname}:6379\n        CACHE_REDIS_URL: redis://${redis_hostname}:6379\n        EVENTS_REDIS_URL: redis://${redis_hostname}:6379\n        MEILISEARCH_HOST: http://${search_hostname}:${search_port}\n        MEILISEARCH_API_KEY: ${search_masterKey}\n      initCommands:\n        # with each deploy\n        - zsc execOnce ${appVersionId}_migration -- yarn migrate\n        - zsc execOnce ${appVersionId}_links -- yarn syncLinks\n        # initial setup, happens once in service lifetime\n        - zsc execOnce createInitialSuperadmin -- yarn createInitialSuperadmin\n        - zsc execOnce seedInitialData -- yarn seedInitialData\n        - zsc execOnce setInitialPublishableKey -- yarn setInitialPublishableKey\n        - zsc execOnce addInitialSearchDocuments -- yarn addInitialSearchDocuments\n      ports:\n        - port: 9000\n          httpSupport: true\n      start: yarn start\n      healthCheck:\n        httpGet:\n          port: 9000\n          path: /health\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-medusa/refs/heads/main/zerops.yml"
  },
  {
    "id": "qwik",
    "recipeId": "zeropsio/recipe-qwik",
    "slug": "qwik",
    "tag": "Qwik",
    "logo": "qwik",
    "title": "Qwik SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-qwik\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-qwik-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-qwik-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-qwik-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-qwik-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://qwik.dev/\">Qwik</a> is a web framework for building instead loading web applications at any size or complexity. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Qwik apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Qwik</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n        <li>Latest version of <strong>Qwik</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default SSR installation</h2>\n      <p>If you want to modify your existing Qwik app to efficiently run on Zerops, follow these steps:</p>\n      <ol>\n        <li>Install the necessary adapter with:\n          <pre>npm run qwik add express</pre>\n          <p>Running this command will make the following changes:</p>\n          <ul>\n            <li>A <em>build.server</em> & <em>serve</em> script will be automatically added to your <em>package.json</em> file.</li>\n            <li>A <em>adapters/express/vite.config.ts</em> and <em>src/entry.express.tsx</em> will be created.</li>\n            <li>It will install the required dependencies for SSR.</li>\n          </ul>\n        </li>\n        <li>Now, just add the <a href=\"https://github.com/zeropsio/recipe-qwik-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n      </ol>\n    </section>\n    <section>\n      <h2>Changes made over the default SSG installation</h2>\n      <p>If you want to modify your existing Qwik app to efficiently run on Zerops, follow these steps:</p>\n      <ol>\n        <li>Install the necessary adapter with:\n          <pre>npm run qwik add static</pre>\n          <p>Running this command will make the following changes:</p>\n          <ul>\n            <li>A <em>build.server</em> script will be automatically added to your <em>package.json</em> file.</li>\n            <li>A <em>adapters/static/vite.config.ts</em> file will be created.</li>\n          </ul>\n        </li>\n        <li>Now, just add the <a href=\"https://github.com/zeropsio/recipe-qwik-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n      </ol>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - package.json\n        - public\n        - server\n        - dist\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm serve\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-qwik-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "qwik-nodejs",
    "recipeId": "zeropsio/recipe-qwik-nodejs",
    "slug": "qwik-nodejs",
    "tag": "Qwik",
    "logo": "qwik",
    "title": "Qwik SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-qwik\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-qwik-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-qwik-nodejs"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://qwik.dev/\">Qwik</a> is a web framework for building instead loading web applications at any size or complexity. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Qwik apps, both server side rendered and static, a breeze. This recipe showcases the SSR version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Qwik</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Qwik app to efficiently run on Zerops, follow these steps:</p>\n      <ol>\n        <li>Install the necessary adapter with:\n          <pre>npm run qwik add express</pre>\n          <p>Running this command will make the following changes:</p>\n          <ul>\n            <li>A <em>build.server</em> & <em>serve</em> script will be automatically added to your <em>package.json</em> file.</li>\n            <li>A <em>adapters/express/vite.config.ts</em> and <em>src/entry.express.tsx</em> will be created.</li>\n            <li>It will install the required dependencies for SSR.</li>\n          </ul>\n        </li>\n        <li>Now, just add the <a href=\"https://github.com/zeropsio/recipe-qwik-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n      </ol>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - package.json\n        - public\n        - server\n        - dist\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: pnpm serve\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-qwik-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "qwik-static",
    "recipeId": "zeropsio/recipe-qwik-static",
    "slug": "qwik-static",
    "tag": "Qwik",
    "logo": "qwik",
    "title": "Qwik static",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-qwik\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: staticapp\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-qwik-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-qwik-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://qwik.dev/\">Qwik</a> is a web framework for building instead loading web applications at any size or complexity. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Qwik apps, both server side rendered and static, a breeze. This recipe showcases the static version.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Qwik</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Qwik app to efficiently run on Zerops, follow these steps:</p>\n      <ol>\n        <li>Install the necessary adapter with:\n          <pre>npm run qwik add static</pre>\n          <p>Running this command will make the following changes:</p>\n          <ul>\n            <li>A <em>build.server</em> script will be automatically added to your <em>package.json</em> file.</li>\n            <li>A <em>adapters/static/vite.config.ts</em> file will be created.</li>\n          </ul>\n        </li>\n      </ol>\n      <p>Now, just add the <a href=\"https://github.com/zeropsio/recipe-qwik-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</p>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - public       \n        - dist/~\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-qwik-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "analog",
    "recipeId": "zeropsio/recipe-analog",
    "slug": "analog",
    "tag": "Analog",
    "logo": "analog",
    "title": "Analog SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-analog\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-analog-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-analog-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-analog-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-analog-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://analogjs.org\">Analog</a> is a fullstack meta-framework for building applications and websites with Angular. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Analog apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Analog</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n        <li>Latest version of <strong>Analog</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default SSG installation</h2>\n      <p>If you want to modify your existing Analog app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-analog-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n      </ol>\n\n    </section>\n    <section>\n      <h2>Changes made over the default SSR installation</h2>\n      <p>If you want to modify your existing Analog app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-analog-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - dist\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: node dist/analog/server/index.mjs\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-analog-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "analog-nodejs",
    "recipeId": "zeropsio/recipe-analog-nodejs",
    "slug": "analog-nodejs",
    "tag": "Analog",
    "logo": "analog",
    "title": "Analog SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-analog\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-astro-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-analog-nodejs"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://analogjs.org\">Analog</a> is a fullstack meta-framework for building applications and websites with Angular. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Analog apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Analog</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Analog app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-analog-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - dist\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: node dist/analog/server/index.mjs\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-analog-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "analog-static",
    "recipeId": "zeropsio/recipe-analog-static",
    "slug": "analog-static",
    "tag": "Analog",
    "logo": "analog",
    "title": "Analog Static",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-analog\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-analog-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-analog-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://analogjs.org\">Analog</a> is a fullstack meta-framework for building applications and websites with Angular. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Analog apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Analog</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Analog app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-analog-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - pnpm i\n        - pnpm build\n      deployFiles:\n        - dist/analog/public/~\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-analog-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "nuxt",
    "recipeId": "zeropsio/recipe-nuxt",
    "slug": "nuxt",
    "tag": "Nuxt",
    "logo": "nuxtjs",
    "title": "Nuxt SSR + Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-nuxt\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: ssrapp\n    type: nodejs@20\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nuxt-nodejs\n\n  - hostname: staticapp\n    type: static\n    zeropsSetup: app\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nuxt-static",
    "repository": [
      {
        "name": "SSR",
        "repository": "https://github.com/zeropsio/recipe-nuxt-nodejs"
      },
      {
        "name": "Static",
        "repository": "https://github.com/zeropsio/recipe-nuxt-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://nuxt.com\">Nuxt</a> is an open source Vue framework for building web applications intuitive and powerful. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Nuxt apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Nuxt</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n        <li>Latest version of <strong>Nuxt</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default SSG installation</h2>\n      <p>If you want to modify your existing Nuxt app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-nuxt-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n      </ol>\n\n    </section>\n    <section>\n      <h2>Changes made over the default SSR installation</h2>\n      <p>If you want to modify your existing Nuxt app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-nuxt-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      prepareCommands:\n        - node -v\n      buildCommands:\n        - yarn\n        - yarn build\n      deployFiles:\n        - .output/~\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: node server/index.mjs\n      \n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nuxt-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "nuxt-nodejs",
    "recipeId": "zeropsio/recipe-nuxt-nodejs",
    "slug": "nuxt-nodejs",
    "tag": "Nuxt",
    "logo": "nuxtjs",
    "title": "Nuxt SSR",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-nuxt\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: nodejs@20\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nuxt-nodejs",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nuxt-nodejs"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://nuxt.com\">Nuxt</a> is an open source Vue framework for building web applications intuitive and powerful. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Nuxt apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Nuxt</strong> with SSR running on a <strong>Zerops Node.js</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Nuxt app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-nuxt-nodejs/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      prepareCommands:\n        - node -v\n      buildCommands:\n        - yarn\n        - yarn build\n      deployFiles:\n        - .output/~\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: node server/index.mjs\n      \n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nuxt-nodejs/refs/heads/main/zerops.yml"
  },
  {
    "id": "nuxt-static",
    "recipeId": "zeropsio/recipe-nuxt-static",
    "slug": "nuxt-static",
    "tag": "Nuxt",
    "logo": "nuxtjs",
    "title": "Nuxt Static",
    "listed": false,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-nuxt\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-nuxt-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-nuxt-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://nuxt.com\">Nuxt</a> is an open source Vue framework for building web applications intuitive and powerful. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Nuxt apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Nuxt</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Nuxt app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-nuxt-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - yarn\n        - yarn nuxi generate\n      deployFiles:\n        - .output/public/~\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-nuxt-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "spring",
    "recipeId": "zeropsio/recipe-spring",
    "slug": "spring",
    "tag": "Spring",
    "logo": "spring",
    "title": "Spring",
    "listed": true,
    "category": "backend",
    "importYaml": "project:\n  name: recipe-spring\n  tags:\n    - zerops-recipe\n    - spring\nservices:\n  - hostname: api\n    type: java@21\n    priority: 5\n    buildFromGit: https://github.com/zeropsio/recipe-spring\n    enableSubdomainAccess: true\n    verticalAutoscaling:\n      minRam: 1\n    maxContainers: 1\n\n  - hostname: app\n    type: static\n    buildFromGit: https://github.com/zeropsio/recipe-backend-ui\n    enableSubdomainAccess: true\n\n  - hostname: db\n    type: postgresql@16\n    priority: 10\n    mode: NON_HA\n\n  - hostname: storage\n    type: object-storage\n    priority: 10\n    objectStoragePolicy: public-read\n    objectStorageSize: 2\n\n  - hostname: adminer\n    type: php-apache@8.1\n    buildFromGit: https://github.com/zeropsio/recipe-adminer\n    enableSubdomainAccess: true\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-spring"
      }
    ],
    "desc": "<a href=\"https://spring.io/\">Spring</a> is world's most popular Java framework designed for building enterprise-level Java applications. This recipe aims to showcase basic Spring concepts and how to integrate them with <a href=\"https://zerops.io\">Zerops</a>, all through a simple file upload demo application.",
    "content": "\n      <section>\n        <h2>Recipe features</h2>\n        <ul>\n          <li><strong>Load balanced</strong> Spring web app running on <strong>Zerops Java</strong> service</li>\n          <li>Served by production-ready embedded application server <strong><a href=\"https://spring.io/\">Tomcat</a></strong></li>\n          <li>Zerops <strong>PostgreSQL 16</strong> service as database</li>\n          <li>Zerops <strong>Object Storage</strong> (S3 compatible) service as file system</li>\n          <li>Automatic on-startup Spring <strong>database migrations</strong></li>\n          <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n          <li>Logs accessible through Zerops GUI</li>\n          <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong></li>\n          <li><a href=\"https://www.adminer.org\" target=\"_blank\">Adminer</a> for <strong>quick database management</strong> tool</li>\n          <li>Unlocked development experience:\n            <ul>\n              <li>Access to database and mail mock through Zerops project VPN (<em>zcli vpn up</em>)</li>\n              <li>Prepared <em>.env.dist</em> file (<em>cp .env.dist .env</em> and change ***** secrets found in Zerops GUI)</li>\n            </ul>\n          </li>\n        </ul>\n      </section>\n\n      <section>\n        <h2>Production vs. development</h2>\n        <p>Base of the recipe is ready for production, the difference comes down to:</p>\n        <ul>\n          <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n          <li>Use at least two containers for Spring service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>api</em> service section)</li>\n          <li>Use production-ready third-party SMTP server instead of Mailpit (change <em>MAIL_</em> secret variables in recipe YAML <em>api</em> service)</li>\n          <li>Disable public access to Adminer or remove it altogether (remove service <em>adminer</em> from recipe YAML)</li>\n        </ul>\n      </section>\n\n      <section>\n        <h2>Changes made over the default installation</h2>\n        <p>If you want to modify your existing Spring app to efficiently run on Zerops, these are the general steps we took:</p>\n        <ul>\n          <li>Add <a href=\"https://github.com/zeropsio/recipe-spring/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> to your repository, our example includes migrations and build process</li>\n        </ul>\n      </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: api\n    build:\n      base: java@21\n      buildCommands:\n        - ./mvnw clean install --define maven.test.skip\n      deployFiles:\n        - ./target/api.jar\n    run:\n      base: java@21\n      ports:\n        - port: 8080\n          httpSupport: true\n      envVariables:\n        DB_HOST: db\n        DB_PORT: $db_port\n        DB_USER: $db_user\n        DB_PASSWORD: $db_password\n        S3_ENDPOINT: $storage_apiUrl\n        S3_BUCKET: $storage_bucketName\n        S3_ACCESS_KEY: $storage_accessKeyId\n        S3_SECRET_KEY: $storage_secretAccessKey\n        MAIL_HOST: mailpit\n        MAIL_PORT: \"1025\"\n      start: java -jar target/api.jar\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-spring/refs/heads/main/zerops.yml"
  },
  {
    "id": "symfony",
    "recipeId": "zeropsio/recipe-symfony",
    "slug": "symfony",
    "tag": "Symfony",
    "logo": "symfony",
    "title": "Symfony",
    "listed": true,
    "category": "backend",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-symfony\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-symfony@main\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_SECRET: <@generateRandomString(<32>)>\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: keydb@6\n    mode: NON_HA\n    priority: 10\n\n  - hostname: adminer\n    type: php-apache@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-adminer@main\n    enableSubdomainAccess: true\n    maxContainers: 1\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit@main\n    enableSubdomainAccess: true\n    maxContainers: 1",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-symfony"
      }
    ],
    "desc": "<a href=\"https://symfony.com/\">Symfony</a> is one of the leading PHP frameworks for building web applications. This recipe helps you to get started with a Symfony Demo app on the Zerops platform.",
    "content": "\n      <section>\n        <h2>Recipe features</h2>\n        <ul>\n          <li>Symfony running on a load balanced <strong>Zerops PHP + Nginx</strong> service.</li>\n          <li>Zerops <strong>PostgresSQL 16</strong> service as a database.</li>\n          <li>Zerops KeyDB (<strong>Redis</strong>) service for session storage.</li>\n          <li>Setup for Doctrine <strong>database migrations</strong>.</li>\n          <li>Logs set up to use <strong>syslog</strong> and accessible through Zerops GUI.</li>\n          <li>Utilization of Zerops built-in <strong>environment variables</strong> system.</li>\n          <li><a href=\"https://github.com/axllent/mailpit\" target=\"_blank\">Mailpit</a> as <strong>SMTP mock server</strong>.</li>\n          <li><a href=\"https://www.adminer.org/en/\" target=\"_blank\">Adminer</a> for <strong>quick database management</strong>.</li>\n        </ul>\n      </section>\n\n      <section>\n        <h2>Production vs. development</h2>\n        <p>Base of the recipe is ready for production, the difference comes down to:</p>\n        <ul>\n          <li>Use highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML, <em>db</em> service section)</li>\n          <li>Use at least two containers for Symfony service to achieve high reliability and resilience (add <em>minContainers: 2</em> in recipe YAML, <em>app</em> service section)</li>\n          <li>Use production-ready third-party SMTP server instead of Mailpit (change <em>MAILER_DSN</em> env variable in <em>./zerops.yml</em> file)</li>\n          <li>Disable public access to Adminer or remove it altogether (remove service <em>adminer</em> from recipe YAML)</li>\n        </ul>\n      </section>\n\n      <section>\n        <h2>Changes made over the default installation</h2>\n        <p>If you want to modify your existing Symfony app to efficiently run on Zerops, these are the general steps we took:</p>\n        <ul>\n          <li>Add <a href=\"https://github.com/zeropsio/recipe-symfony/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> to your repository, our example includes idempotent migrations, caching, and optimized build process</li>\n          <li>Set up <em>monolog.syslog_handler</em> to see logs in Zerops (see our <a href=\"https://github.com/zeropsio/recipe-symfony/blob/main/config/packages/monolog.yaml#L63\" target=\"_blank\">./config/packages/monolog.yaml</a>).</li>\n          <li>Set up <em>session.handler_id</em> to store sessions inside Redis (see our <a href=\"https://github.com/zeropsio/recipe-symfony/blob/main/config/packages/framework.yaml#L16\" target=\"_blank\">./config/packages/framework.yaml</a>, we specifically use DB with index <em>0</em>).</li>\n          <li>We had to move <em>twbs/bootstrap</em> from <em>require-dev</em> to <em>require</em> in the composer section for <em>composer install --no-dev</em> to work.</li>\n          <li>We also had to update <em>symfonycasts/sass-bundle</em> to <em>v0.5</em> or newer for SASS compilation to work on Alpine Linux.</li>\n        </ul>\n      </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: php@8.3\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - php bin/console asset-map:compile\n        - php bin/console cache:warmup\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n      envVariables:\n        APP_ENV: prod\n    run:\n      base: php-nginx@8.3\n      initCommands:\n        - php bin/console doctrine:migrations:migrate\n      envVariables:\n        APP_ENV: prod\n        TRUSTED_PROXIES: 127.0.0.1,10.0.0.0/8\n        DATABASE_URL: \"${db_connectionString}/${db_dbName}?serverVersion=16&charset=utf8\"\n        MAILER_DSN: \"smtp://mailpit:1025\"\n      documentRoot: public\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-symfony/refs/heads/main/zerops.yml"
  },
  {
    "id": "angular-static",
    "recipeId": "zeropsio/recipe-angular-static",
    "slug": "angular-static",
    "tag": "Angular",
    "logo": "angular",
    "title": "Angular Static",
    "listed": true,
    "category": "frontend",
    "importYaml": "project:\n  name: recipe-angular\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: static\n    enableSubdomainAccess: true\n    buildFromGit: https://github.com/zeropsio/recipe-angular-static",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-angular-static"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://angular.dev\">Angular</a> is a web development for building modern applications. <a href=\"https://zerops.io\" target=\"_blank\">Zerops</a> makes deploying and running Angular apps, both server side rendered and static, a breeze.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li>Latest version of <strong>Angular</strong> with SSG running on a <strong>Zerops Static</strong> service.</li>\n      </ul>\n    </section>\n\n    <section>\n      <h2>Production vs. development</h2>\n      <p>This recipe is ready for production as is, and will scale horizontally by adding more containers in case of high traffic surges. If you want to achieve the highest baseline reliability and resilience, start with at least two containers (add <em>minContainers: 2</em> in recipe YAML in the <em>app</em> service section, or change the minimum containers in \"Automatic Scaling configuration\" section of service detail).</p>\n    </section>\n\n    <section>\n      <h2>Changes made over the default installation</h2>\n      <p>If you want to modify your existing Angular app to efficiently run on Zerops, there are no changes needed in the codebase on top of the standard installation, just add <a href=\"https://github.com/zeropsio/recipe-angular-static/blob/main/zerops.yml\" target=\"_blank\">zerops.yml</a> file to the root of your project, and make sure to check <em>package.json</em> for the scripts.</li>\n    </section>\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      buildCommands:\n        - npm i\n        - npm run build\n      deployFiles:\n        - dist/recipe-angular-static/browser/~\n    run:\n      base: static\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-angular-static/refs/heads/main/zerops.yml"
  },
  {
    "id": "phoenix",
    "recipeId": "zeropsio/recipe-phoenix",
    "slug": "phoenix",
    "tag": "Phoenix",
    "logo": "phoenix",
    "title": "Phoenix",
    "listed": true,
    "category": "backend",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-phoenix\n  tags:\n    - zerops-recipe\n\nservices:\n  - hostname: app\n    type: elixir@1.16\n    buildFromGit: https://github.com/zeropsio/recipe-phoenix\n    enableSubdomainAccess: true\n    envSecrets:\n      SECRET_KEY_BASE: <@generateRandomString(<64>)>\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-phoenix"
      }
    ],
    "desc": "<a href=\"https://www.phoenixframework.org/\">Phoenix</a> is a web framework for building building fast, reliable web applications in Elixir. This recipe helps you to get started with a Phoenix app on the Zerops platform.",
    "content": "\n    <section>\n      <h2>Recipe features</h2>\n      <ul>\n        <li><strong>Phoenix 1.7</strong> with <strong>LiveView</strong> for real-time features</li>\n        <li><strong>PostgreSQL</strong> database integration with <strong>Ecto</strong></li>\n        <li>Built with <strong>Bandit</strong> HTTP server (referenced in config/config.exs)</li>\n        <li>Asset bundling with <strong>esbuild</strong> and <strong>Tailwind</strong></li>\n        <li>Email support via <strong>Swoosh</strong></li>\n        <li>Health check endpoint at <em>/status</em></li>\n        <li>JSON handling with <strong>Jason</strong></li>\n      </ul>\n    </section>\n    <section>\n      <h2>Production vs. Development</h2>\n      <p>Base of the recipe is ready for production. For production deployment, consider:</p>\n      <ul>\n        <li>Using highly available version of the PostgreSQL database (change <em>mode</em> from <em>NON_HA</em> to <em>HA</em> in recipe YAML)</li>\n        <li>Using at least two containers for the Phoenix service (add <em>minContainers: 2</em> in recipe YAML)</li>\n      </ul>\n      <p>Further things to think about when running more complex, highly available Phoenix production apps on Zerops:</p>\n      <ul>\n        <li>Containers are volatile - use Zerops object storage to store your files</li>\n        <li>Implement Redis (Valkey) for caching and session management</li>\n      </ul>\n    </section>",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base: elixir@1.16\n      envVariables:\n        MIX_ENV: prod\n        DATABASE_URL: ${db_connectionString}/${db_dbName}\n        SECRET_KEY_BASE: ${RUNTIME_SECRET_KEY_BASE}\n      buildCommands:\n        - mix deps.get --only prod\n        - mix ecto.create\n        - mix ecto.migrate\n        - mix compile\n        - mix assets.deploy\n        - mix phx.digest\n        - mix release --overwrite\n      deployFiles: /\n    run:\n      base: alpine@latest\n      envVariables:\n        DATABASE_URL: ${db_connectionString}/${db_dbName}\n        PORT: 4000\n        PHX_HOST: ${zeropsSubdomain}\n        POOL_SIZE: 10\n        PHX_SERVER: true\n      ports:\n        - port: 4000\n          httpSupport: true\n      start: _build/prod/rel/recipe_phoenix/bin/recipe_phoenix start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-phoenix/refs/heads/main/zerops.yml"
  },
  {
    "id": "laravel-minimal-local",
    "recipeId": "zeropsio/recipe-laravel-minimal-local",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: laravel-minimal-local\n  tags:\n    - zerops-recipe\n    - local\n\nservices:\n  - hostname: app\n    type: php-nginx@8.4\n    buildFromGit: https://github.com/zeropsio/recipe-laravel-minimal\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: true\n      APP_ENV: development\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "laravel-minimal-local",
    "logo": "laravel",
    "title": "Basic Laravel —&nbsp;local&nbsp;environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-laravel-minimal"
      }
    ],
    "desc": "\n      This recipe showcases a production-ready integration of basic Laravel apps to Zerops. The fact this environment\n      is for <strong>local development</strong> comes just from its minimal, cost-efficient resource allocation, selection of the\n      <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/laravel-jetstream-prod\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.4\n      os: alpine\n      buildCommands:\n        - composer install --ignore-platform-reqs\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.4\n      os: alpine\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: \"Laravel Minimal X Zerops\"\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_MAILER: log\n        MAIL_HOST: 127.0.0.1\n        MAIL_PORT: 2525\n        MAIL_USERNAME: null\n        MAIL_PASSWORD: null\n        MAIL_ENCRYPTION: null\n        MAIL_FROM_ADDRESS: \"hello@zerops.io\"\n        MAIL_FROM_NAME: \"${APP_NAME}\"\n\n        SESSION_DRIVER: database\n        SESSION_LIFETIME: 120\n        SESSION_ENCRYPT: false\n        SESSION_PATH: /\n        SESSION_DOMAIN: null\n\n        BROADCAST_CONNECTION: log\n        FILESYSTEM_DISK: local\n        QUEUE_CONNECTION: database\n\n        CACHE_STORE: database\n\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-laravel-minimal/refs/heads/main/zerops.yml"
  },
  {
    "id": "laravel-minimal-devel",
    "recipeId": "zeropsio/recipe-laravel-minimal-devel",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: laravel-minimal-devel\n  tags:\n    - zerops-recipe\n    - development\n\nservices:\n  - hostname: app\n    type: php-nginx@8.4\n    buildFromGit: https://github.com/zeropsio/recipe-laravel-minimal\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: true\n      APP_ENV: development\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "laravel-minimal-devel",
    "logo": "laravel",
    "title": "Basic Laravel — development / small production environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-laravel-minimal"
      }
    ],
    "desc": "\n      This recipe showcases a production-ready integration of basic Laravel apps to Zerops. The fact this environment\n      is called <strong>development</strong> comes just from its minimal, cost-efficient resource allocation, selection of the\n      <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/laravel-minimal-prod\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.4\n      os: alpine\n      buildCommands:\n        - composer install --ignore-platform-reqs\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.4\n      os: alpine\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: \"Laravel Minimal X Zerops\"\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_MAILER: log\n        MAIL_HOST: 127.0.0.1\n        MAIL_PORT: 2525\n        MAIL_USERNAME: null\n        MAIL_PASSWORD: null\n        MAIL_ENCRYPTION: null\n        MAIL_FROM_ADDRESS: \"hello@zerops.io\"\n        MAIL_FROM_NAME: \"${APP_NAME}\"\n\n        SESSION_DRIVER: database\n        SESSION_LIFETIME: 120\n        SESSION_ENCRYPT: false\n        SESSION_PATH: /\n        SESSION_DOMAIN: null\n\n        BROADCAST_CONNECTION: log\n        FILESYSTEM_DISK: local\n        QUEUE_CONNECTION: database\n\n        CACHE_STORE: database\n\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-laravel-minimal/refs/heads/main/zerops.yml"
  },
  {
    "id": "laravel-minimal-prod",
    "recipeId": "zeropsio/recipe-laravel-minimal-prod",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: laravel-minimal-prod\n  corePackage: SERIOUS\n  tags:\n    - zerops-recipe\n    - production\n\nservices:\n  - hostname: app\n    type: php-nginx@8.4\n    buildFromGit: https://github.com/zeropsio/recipe-laravel-minimal\n    enableSubdomainAccess: true\n    minContainers: 2\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: false\n      APP_ENV: production\n\n  - hostname: db\n    type: postgresql@16\n    mode: HA\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "laravel-minimal-prod",
    "title": "Basic Laravel — large scale production",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-laravel-minimal"
      }
    ],
    "logo": "laravel",
    "desc": "\n      This recipe showcases a <strong>production-ready</strong> integration of basic Laravel apps with Zerops, with all services set\n      to high availability and <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Serious</a>\n      core package used for enterprise grade reliability. If you want to try more cost-efficient environment deploy —\n      <a href=\"/recipe/laravel-jetstream-devel\" target=\"_blank\">development / small production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.4\n      os: alpine\n      buildCommands:\n        - composer install --ignore-platform-reqs\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.4\n      os: alpine\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: \"Laravel Minimal X Zerops\"\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_MAILER: log\n        MAIL_HOST: 127.0.0.1\n        MAIL_PORT: 2525\n        MAIL_USERNAME: null\n        MAIL_PASSWORD: null\n        MAIL_ENCRYPTION: null\n        MAIL_FROM_ADDRESS: \"hello@zerops.io\"\n        MAIL_FROM_NAME: \"${APP_NAME}\"\n\n        SESSION_DRIVER: database\n        SESSION_LIFETIME: 120\n        SESSION_ENCRYPT: false\n        SESSION_PATH: /\n        SESSION_DOMAIN: null\n\n        BROADCAST_CONNECTION: log\n        FILESYSTEM_DISK: local\n        QUEUE_CONNECTION: database\n\n        CACHE_STORE: database\n\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-laravel-minimal/refs/heads/main/zerops.yml"
  },
  {
    "id": "laravel-jetstream-local",
    "recipeId": "zeropsio/recipe-laravel-jetstream-local",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: laravel-jetstream-local\n  tags:\n    - zerops-recipe\n    - local\n\nservices:\n  - hostname: app\n    type: php-nginx@8.4\n    buildFromGit: https://github.com/zeropsio/recipe-laravel-jetstream\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_NAME: ZeropsLaravelJetstreamLocal\n      APP_DEBUG: true\n      APP_ENV: development\n      APP_KEY: <@generateRandomString(<32>)>\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true",
    "enableOnboarding": true,
    "listed": false,
    "slug": "laravel-jetstream-local",
    "logo": "laravel-jetstream",
    "title": "Laravel Jetstream —&nbsp;local&nbsp;environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-laravel-jetstream"
      }
    ],
    "desc": "\n      This recipe showcases a production-ready integration of Jetstream apps to&nbsp;Zerops.\n      The fact this environment is for <strong>local development</strong> comes just from its minimal,\n      cost-efficient resource allocation, selection of the\n      <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/laravel-jetstream-prod\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.4\n        - nodejs@18\n      os: ubuntu\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - npm install\n        - npm run build\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n        - node_modules\n        - package-lock.json\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.4\n      os: ubuntu\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n        ASSET_URL: ${APP_URL}\n        VITE_APP_NAME: ${APP_NAME}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n        DB_USERNAME: ${db_user}\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: ZeropsLaravel\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        BCRYPT_ROUNDS: 12\n        TRUSTED_PROXIES: \"*\"\n        FILESYSTEM_DISK: s3\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - php artisan migrate --isolated --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-laravel-jetstream/refs/heads/main/zerops.yml"
  },
  {
    "id": "laravel-jetstream-devel",
    "recipeId": "zeropsio/recipe-laravel-jetstream-devel",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: laravel-jetstream-devel\n  tags:\n    - zerops-recipe\n    - development\n\nservices:\n  - hostname: app\n    type: php-nginx@8.4\n    buildFromGit: https://github.com/zeropsio/recipe-laravel-jetstream\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_NAME: ZeropsLaravelJetstreamDev\n      APP_DEBUG: true\n      APP_ENV: development\n      APP_KEY: <@generateRandomString(<32>)>\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true",
    "enableOnboarding": true,
    "listed": false,
    "slug": "laravel-jetstream-devel",
    "title": "Laravel Jetstream — development / small production environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-laravel-jetstream"
      }
    ],
    "logo": "laravel-jetstream",
    "desc": "\n      This recipe showcases a production-ready integration of Jetstream apps to Zerops. The fact this environment\n      is called <strong>development</strong> comes just from its minimal, cost-efficient resource allocation and\n      selection of the <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/laravel-jetstream-prod\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.4\n        - nodejs@18\n      os: ubuntu\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - npm install\n        - npm run build\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n        - node_modules\n        - package-lock.json\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.4\n      os: ubuntu\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n        ASSET_URL: ${APP_URL}\n        VITE_APP_NAME: ${APP_NAME}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n        DB_USERNAME: ${db_user}\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: ZeropsLaravel\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        BCRYPT_ROUNDS: 12\n        TRUSTED_PROXIES: \"*\"\n        FILESYSTEM_DISK: s3\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - php artisan migrate --isolated --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-laravel-jetstream/refs/heads/main/zerops.yml"
  },
  {
    "id": "laravel-jetstream-prod",
    "recipeId": "zeropsio/recipe-laravel-jetstream-prod",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: laravel-jetstream-prod\n  corePackage: SERIOUS\n  tags:\n    - zerops-recipe\n    - production\n\nservices:\n  - hostname: app\n    type: php-nginx@8.4\n    buildFromGit: https://github.com/zeropsio/recipe-laravel-jetstream\n    enableSubdomainAccess: true\n    minContainers: 2\n    envSecrets:\n      APP_NAME: ZeropsLaravelJetstreamProd\n      APP_DEBUG: false\n      APP_ENV: production\n      APP_KEY: <@generateRandomString(<32>)>\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "laravel-jetstream-prod",
    "title": "Laravel Jetstream — large scale production",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-laravel-jetstream"
      }
    ],
    "logo": "laravel-jetstream",
    "desc": "\n      This recipe showcases a <strong>production-ready</strong> integration of Jetstream apps with Zerops, with all services set to high\n      availability and <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Serious</a>\n       core package used for enterprise grade reliability. If you want to try more cost-efficient environment deploy —\n      <a href=\"/recipe/laravel-jetstream-devel\" target=\"_blank\">development / small production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.4\n        - nodejs@18\n      os: ubuntu\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - npm install\n        - npm run build\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n        - node_modules\n        - package-lock.json\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.4\n      os: ubuntu\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n        ASSET_URL: ${APP_URL}\n        VITE_APP_NAME: ${APP_NAME}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n        DB_USERNAME: ${db_user}\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: ZeropsLaravel\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        BCRYPT_ROUNDS: 12\n        TRUSTED_PROXIES: \"*\"\n        FILESYSTEM_DISK: s3\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - php artisan migrate --isolated --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-laravel-jetstream/refs/heads/main/zerops.yml"
  },
  {
    "id": "twillcms-local",
    "recipeId": "zeropsio/recipe-twill-local",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: twillcms-local\n  tags:\n    - zerops-recipe\n    - local\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-twill\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: true\n      APP_ENV: development\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 10\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "twillcms-local",
    "logo": "twill",
    "title": "TwillCMS —&nbsp;local&nbsp;environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-twill"
      }
    ],
    "desc": "\n      This recipe showcases a production-ready integration of TwillCMS with Zerops.\n      The fact this environment is for <strong>local development</strong> comes just from its minimal,\n      cost-efficient resource allocation, selection of the\n      <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/twillcms-prod\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.3\n        - nodejs@18\n      os: alpine\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - npm install\n        - npm run build\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n        - node_modules\n        - package-lock.json\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.3\n      os: ubuntu\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: ZeropsTwill\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: ZeropsLaravel\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        BCRYPT_ROUNDS: 12\n\n        MEDIA_LIBRARY_ENDPOINT_TYPE: s3\n        GLIDE_USE_SOURCE_DISK: s3\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n      initCommands:\n        - sudo -E -u zerops -- zsc execOnce initialize -- php artisan twill:install -n --env=development\n        - sudo -E -u zerops -- zsc execOnce initializeadmin -- php artisan twill:superadmin twill@zerops.io zerops\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --isolated --force\n        - sudo -E -u zerops -- zsc execOnce initializeSeed -- php artisan db:seed --force\n#        - php artisan view:cache\n#        - php artisan config:cache\n#        - php artisan route:cache\n#        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-twill/refs/heads/main/zerops.yml"
  },
  {
    "id": "twillcms-devel",
    "recipeId": "zeropsio/recipe-twill-devel",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: twillcms-devel\n  tags:\n    - zerops-recipe\n    - development\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-twill\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: true\n      APP_ENV: development\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 10\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "twillcms-devel",
    "logo": "twill",
    "title": "TwillCMS — development / small production environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-twill"
      }
    ],
    "desc": "\n      This recipe showcases a production-ready integration of TwillCMS with Zerops. The fact this environment\n      is called <strong>development</strong> comes just from its minimal, cost-efficient resource allocation and\n      selection of the <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/twillcms-devel\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.3\n        - nodejs@18\n      os: alpine\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - npm install\n        - npm run build\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n        - node_modules\n        - package-lock.json\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.3\n      os: ubuntu\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: ZeropsTwill\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: ZeropsLaravel\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        BCRYPT_ROUNDS: 12\n\n        MEDIA_LIBRARY_ENDPOINT_TYPE: s3\n        GLIDE_USE_SOURCE_DISK: s3\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n      initCommands:\n        - sudo -E -u zerops -- zsc execOnce initialize -- php artisan twill:install -n --env=development\n        - sudo -E -u zerops -- zsc execOnce initializeadmin -- php artisan twill:superadmin twill@zerops.io zerops\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --isolated --force\n        - sudo -E -u zerops -- zsc execOnce initializeSeed -- php artisan db:seed --force\n#        - php artisan view:cache\n#        - php artisan config:cache\n#        - php artisan route:cache\n#        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-twill/refs/heads/main/zerops.yml"
  },
  {
    "id": "twillcms-prod",
    "recipeId": "zeropsio/recipe-twill-prod",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: twillcms-prod\n  corePackage: SERIOUS\n  tags:\n    - zerops-recipe\n    - production\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-twill\n    enableSubdomainAccess: true\n    minContainers: 2\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: false\n      APP_ENV: production\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "twillcms-prod",
    "logo": "twill",
    "title": "TwillCMS — large scale production",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-twill"
      }
    ],
    "desc": "\n      This recipe showcases a **production-ready** integration of Twill apps with Zerops, with all services set to high\n      availability and <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Serious</a>\n       core package used for enterprise grade reliability. If you want to try more cost-efficient environment deploy —\n       <a href=\"/recipe/twillcms-devel\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.3\n        - nodejs@18\n      os: alpine\n      buildCommands:\n        - composer install --optimize-autoloader --no-dev\n        - npm install\n        - npm run build\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n        - node_modules\n        - package-lock.json\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.3\n      os: ubuntu\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: ZeropsTwill\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: ZeropsLaravel\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        BCRYPT_ROUNDS: 12\n\n        MEDIA_LIBRARY_ENDPOINT_TYPE: s3\n        GLIDE_USE_SOURCE_DISK: s3\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n      initCommands:\n        - sudo -E -u zerops -- zsc execOnce initialize -- php artisan twill:install -n --env=development\n        - sudo -E -u zerops -- zsc execOnce initializeadmin -- php artisan twill:superadmin twill@zerops.io zerops\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --isolated --force\n        - sudo -E -u zerops -- zsc execOnce initializeSeed -- php artisan db:seed --force\n#        - php artisan view:cache\n#        - php artisan config:cache\n#        - php artisan route:cache\n#        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-twill/refs/heads/main/zerops.yml"
  },
  {
    "id": "filament-local",
    "recipeId": "zeropsio/recipe-filament-local",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: filament-local\n  tags:\n    - zerops-recipe\n    - local\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-filament\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: true\n      APP_ENV: development\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 10\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "filament-local",
    "logo": "filament",
    "title": "Filament —&nbsp;local&nbsp;environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-filament"
      }
    ],
    "desc": "\n      This recipe showcases a production-ready integration of Filament with Zerops.\n      The fact this environment is for <strong>local development</strong> comes just from its minimal,\n      cost-efficient resource allocation, selection of the\n      <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/filament-prod\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.3\n      os: alpine\n      buildCommands:\n        - composer install --ignore-platform-reqs\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.3\n      os: alpine\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: \"Filament X Zerops\"\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: FilamentZerops\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n        BCRYPT_ROUNDS: 12\n        FILESYSTEM_DISK: s3\n        FILAMENT_FILESYSTEM_DISK: s3\n\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --isolated --force\n        - sudo -E -u zerops -- zsc execOnce initialize -- php artisan db:seed --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-filament/refs/heads/main/zerops.yml"
  },
  {
    "id": "filament-devel",
    "recipeId": "zeropsio/recipe-filament-devel",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: filament-devel\n  tags:\n    - zerops-recipe\n    - development\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-filament\n    enableSubdomainAccess: true\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: true\n      APP_ENV: development\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n    priority: 10\n\n  - hostname: mailpit\n    type: go@1\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "filament-devel",
    "logo": "filament",
    "title": "Filament — development / small production environment",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-filament"
      }
    ],
    "desc": "\n      This recipe showcases a production-ready integration of Filament with Zerops. The fact this environment\n      is called <strong>development</strong> comes just from its minimal, cost-efficient resource allocation and\n      selection of the <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Lightweight</a>\n      core package and the fact you'd only start the services when you are actively working on the project.\n      If you want to try the \"production\" environment setup with HA services and enterprise grade reliability deploy —\n      <a href=\"/recipe/filament-prod\" target=\"_blank\">production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.3\n      os: alpine\n      buildCommands:\n        - composer install --ignore-platform-reqs\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.3\n      os: alpine\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: \"Filament X Zerops\"\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: FilamentZerops\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n        BCRYPT_ROUNDS: 12\n        FILESYSTEM_DISK: s3\n        FILAMENT_FILESYSTEM_DISK: s3\n\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --isolated --force\n        - sudo -E -u zerops -- zsc execOnce initialize -- php artisan db:seed --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-filament/refs/heads/main/zerops.yml"
  },
  {
    "id": "filament-prod",
    "recipeId": "zeropsio/recipe-filament-prod",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: filament-prod\n  corePackage: SERIOUS\n  tags:\n    - zerops-recipe\n    - production\n\nservices:\n  - hostname: app\n    type: php-nginx@8.3\n    buildFromGit: https://github.com/zeropsio/recipe-filament\n    enableSubdomainAccess: true\n    minContainers: 2\n    envSecrets:\n      APP_KEY: <@generateRandomString(<32>)>\n      APP_DEBUG: false\n      APP_ENV: production\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125\n\n  - hostname: db\n    type: postgresql@16\n    mode: HA\n    priority: 10\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: HA\n    priority: 10\n\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n    objectStoragePolicy: public-read\n    priority: 10",
    "enableOnboarding": true,
    "listed": false,
    "slug": "filament-prod",
    "logo": "filament",
    "title": "Filament — large scale production",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-filament"
      }
    ],
    "desc": "\n      This recipe showcases a <strong>production-ready</strong> integration of Filament apps with Zerops, with all services set to high\n      availability and <a href=\"https://docs.zerops.io/features/pricing#understanding-projects\" target=\"_blank\">Serious</a>\n       core package used for enterprise grade reliability. If you want to try more cost-efficient environment deploy —\n       <a href=\"/recipe/filament-devel\" target=\"_blank\">development / small production environment recipe</a>.\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: app\n    build:\n      base:\n        - php@8.3\n      os: alpine\n      buildCommands:\n        - composer install --ignore-platform-reqs\n      deployFiles: ./\n      cache:\n        - vendor\n        - composer.lock\n    deploy:\n      readinessCheck:\n        httpGet:\n          port: 80\n          path: /up\n    run:\n      base: php-nginx@8.3\n      os: alpine\n      siteConfigPath: site.conf.tmpl\n      envVariables:\n        APP_NAME: \"Filament X Zerops\"\n        APP_LOCALE: en\n        APP_FAKER_LOCALE: en_US\n        APP_FALLBACK_LOCALE: en\n        APP_MAINTENANCE_DRIVER: file\n        APP_MAINTENANCE_STORE: database\n        APP_TIMEZONE: UTC\n        APP_URL: ${zeropsSubdomain}\n\n        DB_CONNECTION: pgsql\n        DB_DATABASE: db\n        DB_HOST: db\n        DB_USERNAME: ${db_user}\n        DB_PASSWORD: ${db_password}\n        DB_PORT: 5432\n\n        LOG_CHANNEL: syslog\n        LOG_LEVEL: debug\n        LOG_STACK: single\n\n        MAIL_FROM_ADDRESS: hello@example.com\n        MAIL_FROM_NAME: FilamentZerops\n        MAIL_HOST: mailpit\n        MAIL_MAILER: smtp\n        MAIL_PORT: 1025\n\n        BROADCAST_CONNECTION: redis\n        CACHE_PREFIX: cache\n        CACHE_STORE: redis\n        QUEUE_CONNECTION: redis\n        REDIS_CLIENT: phpredis\n        REDIS_HOST: redis\n        REDIS_PORT: 6379\n        SESSION_DRIVER: redis\n        SESSION_ENCRYPT: false\n        SESSION_LIFETIME: 120\n        SESSION_PATH: /\n\n        AWS_ACCESS_KEY_ID: ${storage_accessKeyId}\n        AWS_REGION: us-east-1\n        AWS_BUCKET: ${storage_bucketName}\n        AWS_ENDPOINT: ${storage_apiUrl}\n        AWS_SECRET_ACCESS_KEY: ${storage_secretAccessKey}\n        AWS_URL: ${storage_apiUrl}/${storage_bucketName}\n        AWS_USE_PATH_STYLE_ENDPOINT: true\n\n        BCRYPT_ROUNDS: 12\n        FILESYSTEM_DISK: s3\n        FILAMENT_FILESYSTEM_DISK: s3\n\n      initCommands:\n        - php artisan view:cache\n        - php artisan config:cache\n        - php artisan route:cache\n        - sudo -E -u zerops -- zsc execOnce ${appVersionId} -- php artisan migrate --isolated --force\n        - sudo -E -u zerops -- zsc execOnce initialize -- php artisan db:seed --force\n        - php artisan optimize\n      healthCheck:\n        httpGet:\n          port: 80\n          path: /up\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-filament/refs/heads/main/zerops.yml"
  },
  {
    "id": "directus",
    "recipeId": "zeropsio/recipe-directus",
    "slug": "directus",
    "tag": "Directus",
    "logo": "directus",
    "title": "Directus",
    "listed": true,
    "category": "project-utility",
    "importYaml": "#yamlPreprocessor=on\nproject:\n  name: recipe-directus\n  tags:\n    - zerops-recipe\n    - headless-cms\n\nservices:\n  - hostname: storage\n    type: object-storage\n    objectStorageSize: 2\n\n  - hostname: redis\n    type: valkey@7.2\n    mode: NON_HA\n\n  - hostname: db\n    type: postgresql@16\n    mode: NON_HA\n\n  - hostname: mailpit\n    type: alpine@3.20\n    buildFromGit: https://github.com/zeropsio/recipe-mailpit\n    enableSubdomainAccess: true\n\n  - hostname: directus\n    type: nodejs@22\n    envSecrets:\n      SECRET: <@generateRandomString(<32>)>\n      ADMIN_EMAIL: admin@example.com\n      ADMIN_PASSWORD: <@generateRandomString(<12>)>\n      ADMIN_TOKEN: <@generateRandomString(<32>)>\n    buildFromGit: https://github.com/zeropsio/recipe-directus\n    enableSubdomainAccess: true\n    verticalAutoscaling:\n      minRam: 0.25\n      minFreeRamGB: 0.125",
    "repository": [
      {
        "repository": "https://github.com/zeropsio/recipe-directus"
      }
    ],
    "desc": "<a target=\"_blank\" href=\"https://directus.io\">Directus</a> is a real-time API and app dashboard that instantly transforms any SQL database into a powerful REST/GraphQL API and no-code app. This recipe showcases how to run a Directus instance on Zerops, including advanced features like schema migrations, email templating, and Object Storage integration, making it suitable for production deployments of any scale.",
    "content": "\n     <section>\n    <h2>Recipe Features</h2>\n    <ul>\n      <li>Directus running on a load-balanced <strong>Zerops Node.js</strong> service</li>\n      <li>Zerops <strong>PostgreSQL</strong> service as the database</li>\n      <li>Zerops <strong>Object Storage</strong> (S3 compatible) service for file storage</li>\n      <li>Automated schema migrations using Directus snapshots</li>\n      <li>Custom email templates with Liquid templating</li>\n      <li>Logs accessible through Zerops GUI</li>\n      <li>Utilization of Zerops built-in <strong>environment variables</strong> system</li>\n      <li>Zero downtime deployment with Zerops readiness checks</li>\n      <li>Advanced app monitoring with health checks</li>\n      <li>Sample collection setup with \"images\" demonstration</li>\n    </ul>\n  </section>\n\n  <section>\n    <h2>Schema Management</h2>\n    <p>Directus provides a powerful schema snapshot system for maintaining consistency across environments:</p>\n    <ol>\n      <li>Make a copy of <code>.env.example</code> named <code>.env</code> and update <code>DB_PASSWORD</code> with credentials from GUI</li>\n      <li>Install the Zerops CLI tool <code>zcli</code> and authenticate</li>\n      <li>Generate a schema snapshot:</li>\n    </ol>\n    <pre><code>zcli vpn up\nnpx directus schema snapshot > snapshot.yaml</code></pre>\n    <p>The recipe includes a demo \"images\" collection in <code>snapshot.yaml</code>. Snapshots are automatically applied during deployment via <code>run.initCommands</code>.</p>\n  </section>\n\n  <section>\n    <h2>Email Templates</h2>\n    <p>Customize Directus email notifications by adding templates to the <code>./templates</code> directory. Templates should correspond to <a href=\"https://github.com/directus/directus/tree/main/api/src/services/mail/templates\">base Directus templates</a>.</p>\n    <p>Example template structure:</p>\n    <pre><code>./templates/\n  └── user-invitation.liquid</code></pre>\n  </section>\n\n  <section>\n    <h2>Project Customization</h2>\n    <p>To adapt this recipe for your needs:</p>\n    <ol>\n      <li>Fork this repository</li>\n      <li>Modify your Directus instance through the admin interface</li>\n      <li>Create a new snapshot using the schema snapshot command</li>\n      <li>Update environment variables and configurations as needed</li>\n    </ol>\n    <p>The resulting setup will provide a ready-to-deploy Directus instance with your specific configurations.</p>\n  </section>\n\n  <section>\n    <h2>Production Deployment Guidelines</h2>\n\n    <h4>Database Layer</h4>\n    <ul>\n      <li>Enable <strong>High Availability</strong> mode for PostgreSQL service</li>\n      <li>Configure appropriate backup strategies</li>\n    </ul>\n\n    <h4>Cache Layer</h4>\n    <ul>\n      <li>Upgrade Redis to <strong>HA mode</strong> for enhanced reliability</li>\n      <li>Zerops HA Redis (Valkey) implementation automatically handles master/replica routing:\n        <ul>\n          <li>Write operations are directed to master</li>\n          <li>Read operations are distributed across all nodes</li>\n          <li>No manual sentinel configuration required</li>\n        </ul>\n      </li>\n    </ul>\n\n    <h3>Multi-Container Setup</h3>\n    <p>When scaling Directus across multiple containers, implement <a href=\"https://docs.directus.io/self-hosted/config-options.html#redis\">Redis Configuration adjustments</a>.</p>\n\n    <h3>Email Configuration</h3>\n    <p>For production environments:</p>\n    <ol>\n      <li>Replace the development <em>mailpit</em> service with a production-ready email service</li>\n      <li>Configure appropriate email credentials in environment variables</li>\n      <li>Verify email template rendering and delivery</li>\n    </ol>\n\n    <h3>Schema Management</h3>\n    <p>Implement robust schema version control:</p>\n    <pre><code># Wrap schema applications in execOnce to prevent duplicate migrations on multiple containers.\nzsc execOnce \"migrate-${appVersionId}\" -- directus schema apply --yes snapshot.yaml</code></pre>\n    <p>This approach ensures:</p>\n    <ul>\n      <li>One-time execution of migrations</li>\n      <li>Version-specific schema updates</li>\n      <li>Reliable deployment across environments</li>\n    </ul>\n\n    <h3>Pre-Production Checklist</h3>\n    <ul>\n      <li> Enable HA mode for PostgreSQL</li>\n      <li> Configure HA Redis</li>\n      <li> Remove development services (e.g., mailpit)</li>\n      <li> Configure production email service</li>\n      <li> Review and update environment variables</li>\n      <li> Test schema migration process</li>\n      <li> Verify backup procedures</li>\n      <li> Review security settings</li>\n    </ul>\n\n    <blockquote>\n      <p><strong>Note:</strong> These guidelines represent baseline production considerations. Additional optimizations may be necessary based on specific use cases and requirements.</p>\n    </blockquote>\n  </section>\n\n    ",
    "zeropsYmlContent": "zerops:\n  - setup: directus\n    build:\n      base: nodejs@22\n      buildCommands:\n        - npm i\n      deployFiles:\n        - ./\n      cache: \n        - node_modules\n    run:\n      base: nodejs@22\n      prepareCommands:\n        - npm i -g directus\n      envVariables:\n        PUBLIC_URL: ${zeropsSubdomain}\n        DB_CLIENT: pg\n        DB_CONNECTION_STRING: ${db_connectionString}/${db_dbName}\n        \n        # Fill out the redis configuration for HA deployments.\n        # See: https://docs.directus.io/self-hosted/config-options.html#redis\n        REDIS: ${redis_connectionString}\n        \n        RATE_LIMITER_ENABLED: true\n        RATE_LIMITER_STORE: redis\n        \n        # Adjust accordingly depending on your setup.\n        # https://docs.directus.io/self-hosted/config-options.html#cache\n        CACHE_ENABLED: true\n        CACHE_STORE: redis\n        CACHE_AUTO_PURGE: true\n        CACHE_TTL: 5m\n        \n        STORAGE_LOCATIONS: s3\n        STORAGE_S3_DRIVER: s3\n        STORAGE_S3_KEY: ${storage_accessKeyId}\n        STORAGE_S3_SECRET: ${storage_secretAccessKey}\n        STORAGE_S3_BUCKET: ${storage_bucketName}\n        STORAGE_S3_REGION: us-east-1\n        STORAGE_S3_ENDPOINT: ${storage_apiUrl}\n        STORAGE_S3_FORCE_PATH_STYLE: true\n        \n        EMAIL_FROM: no-reply@example.com\n        EMAIL_TEMPLATES_PATH: ./templates\n        # Adjust accordingly depending on your setup.\n        # https://docs.directus.io/self-hosted/config-options.html#smtp-smtp\n        EMAIL_TRANSPORT: smtp\n        EMAIL_SMTP_HOST: mailpit\n        EMAIL_SMTP_PORT: 1025\n        \n        # Adjust accordingly depending on your setup.\n        # https://docs.directus.io/self-hosted/config-options.html#cors\n        CORS_ENABLED: true\n        CORS_ORIGIN: true\n      ports:\n        - port: 8055\n          httpSupport: true\n      initCommands:\n        - zsc execOnce bootstrap -- directus bootstrap\n        - zsc execOnce schema -- directus schema apply --yes snapshot.yaml\n      start: directus start\n",
    "zeropsYmlUrl": "https://raw.githubusercontent.com/zeropsio/recipe-directus/refs/heads/main/zerops.yml"
  }
]
